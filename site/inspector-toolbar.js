/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["InspectorToolbar"] = factory();
	else
		root["InspectorToolbar"] = factory();
})(this, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/styles.css":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/styles.css ***!
  \**************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.input-with-icon {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.input-with-icon input {\n  padding-right: 32px; \n}\n\n.input-with-icon .icon-button {\n  position: absolute;\n  right: 4px;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n}\n\n.input-with-icon .icon-button:hover {\n  background: rgba(59, 130, 246, 0.1);\n  transform: translateY(-50%) scale(1.05);\n}\n\n.input-with-icon .icon-button.active {\n  background: rgba(59, 130, 246, 0.2);\n  color: #2563eb;\n  transform: translateY(-50%) scale(1.05);\n  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.3);\n}\n.inspector-toolbar {\n  width: 680px;\n  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);\n  color: #1e293b;\n  border-radius: 10px;\n  padding: 8px 6px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  box-shadow: 0 16px 64px rgba(0, 0, 0, 0.15), 0 8px 32px rgba(37, 99, 235, 0.2), 0 1px 4px rgba(0, 0, 0, 0.1);\n  border: 1px solid #e2e8f0;\n}\n\n.inspector-toolbar-content {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 8px;\n  height: 40px;\n  min-height: 40px;\n}\n\n.inspector-toolbar-collapse {\n  background-color: white;\n  border: none;\n  color: #475569;\n  font-size: 18px;\n  cursor: pointer;\n  padding: 0;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.inspector-toolbar-collapse svg {\n  transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  will-change: transform;\n}\n\n.inspector-toolbar-collapse:hover {\n  transform: translateY(-1px);\n}\n\n.toolbar-left, .toolbar-right {\n  display: flex;\n  align-items: center;\n}\n\n.toolbar-logo {\n  font-weight: 700;\n  margin-right: 12px;\n  background: linear-gradient(135deg, #3b82f6 0%, #1e40af 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  font-size: 15px;\n  letter-spacing: -0.3px;\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.toolbar-logo svg {\n  fill: none;\n  stroke: #3b82f6;\n  flex-shrink: 0;\n}\n\n.toolbar-divider {\n  width: 1px;\n  height: 18px;\n  background: linear-gradient(to bottom, transparent 0%, #cbd5e1 20%, #64748b 50%, #cbd5e1 80%, transparent 100%);\n  margin: 0 10px;\n  flex-shrink: 0;\n}\n\n.toolbar-actions {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  flex: 1;\n  min-width: 0;\n}\n\n.toolbar-button {\n  background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);\n  border: 1px solid #cbd5e1;\n  color: #475569;\n  padding: 6px 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.25s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  font-weight: 500;\n  font-size: 12px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  height: 28px;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  gap: 6px;\n  will-change: transform, box-shadow;\n}\n\n.toolbar-button svg {\n  flex-shrink: 0;\n  transition: all 0.25s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n\n.toolbar-button:hover {\n  background: linear-gradient(135deg, #e2e8f0 0%, #cbd5e1 100%);\n  border-color: #94a3b8;\n  transform: translateY(-1px);\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\n}\n\n.toolbar-button.active,\n.create-event-button {\n  background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%) !important;\n  color: white !important;\n  border-color: #1d4ed8 !important;\n  box-shadow: 0 3px 8px rgba(37, 99, 235, 0.3) !important;\n}\n\n.create-event-button:hover {\n  background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%) !important;\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(37, 99, 235, 0.4) !important;\n}\n\n.create-event-button svg {\n  stroke: white !important;\n}\n\n.toolbar-left {\n    flex-grow: 1;\n}\n\n.toolbar-right {\n  gap: 8px;\n}\n\n.hide-toolbar-button {\n  background: transparent !important;\n  border: 1px solid transparent !important;\n  box-shadow: none !important;\n  padding: 6px !important;\n  width: 28px !important;\n  height: 28px !important;\n}\n\n.hide-toolbar-button svg {\n  stroke: #94a3b8 !important;\n}\n\n.hide-toolbar-button:hover {\n  background: rgba(239, 68, 68, 0.1) !important;\n  border-color: rgba(239, 68, 68, 0.3) !important;\n  transform: none !important;\n  box-shadow: none !important;\n}\n\n.hide-toolbar-button:hover svg {\n  stroke: #ef4444 !important;\n}\n\n/* RTL Support */\n[dir=\"rtl\"] .toolbar-right {\n  flex-direction: row-reverse;\n}\n\n[dir=\"rtl\"] .toolbar-left {\n  flex-direction: row-reverse;\n}\n\n[dir=\"rtl\"] .toolbar-logo {\n  margin-left: 12px;\n  margin-right: 0;\n}\n\n[dir=\"rtl\"] .toolbar-divider {\n  margin: 0 10px;\n}\n\n\n\n.inspector-highlighter {\n    position: absolute;\n    background-color: rgba(59, 130, 246, 0.15);\n    border: 2px solid #3b82f6;\n    border-radius: 4px;\n    z-index: 9998;\n    display: none;\n    pointer-events: none;\n    box-shadow: 0 0 20px rgba(59, 130, 246, 0.3), inset 0 0 20px rgba(59, 130, 246, 0.1);\n}\n\n.inspector-tooltip {\n    position: absolute;\n    background: linear-gradient(135deg, #1e293b 0%, #334155 100%);\n    color: white;\n    padding: 6px 10px;\n    border-radius: 6px;\n    border: 1px solid #475569;\n    z-index: 9999999;\n    display: none;\n    font-size: 10px;\n    pointer-events: none;\n    font-family: 'SF Mono', 'Monaco', 'Cascadia Code', 'Roboto Mono', monospace;\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(8px);\n}\n\n.custom-event-form-container {\n  background: #ffffff;\n  padding: 20px;\n  padding-bottom: 0;\n  border-top: 1px solid #e5e7eb;\n  border-radius: 0 0 10px 10px;\n  transition: max-height 0.3s ease-in-out, padding 0.3s ease-in-out, opacity 0.3s ease-in-out;\n  overflow: visible;\n  max-height: 85vh;\n  opacity: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.custom-event-form-container.collapsed {\n  max-height: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  opacity: 0;\n  border-top-width: 0;\n  overflow: hidden;\n}\n\n/* Stepper UI Styles */\n.stepper-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  min-height: 450px;\n  max-height: calc(80vh - 40px);\n  opacity: 0;\n}\n\n.custom-event-form-container:not(.collapsed) .stepper-container {\n    opacity: 1;\n    transition: opacity 0.3s ease-in-out 200ms;\n}\n\n.stepper-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 0 12px;\n  margin-bottom: 8px;\n}\n\n.stepper-title {\n  font-size: 17px;\n  font-weight: 600;\n  color: #374151;\n}\n\n.stepper-controls {\n  display: flex;\n  align-items: center;\n}\n\n.stepper-collapse-btn {\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #64748b;\n}\n\n.stepper-progress {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  justify-content: center;\n}\n\n.stepper-step {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  cursor: pointer;\n}\n\n.step-number {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background-color: #e5e7eb;\n  color: #6b7280;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 13px;\n  margin-bottom: 6px;\n  transition: all 0.3s ease;\n}\n\n.step-label {\n  font-size: 12px;\n  color: #6b7280;\n  font-weight: 500;\n  white-space: nowrap;\n  transition: color 0.3s ease;\n}\n\n.stepper-connector {\n  flex: 1;\n  height: 1px;\n  background: #e5e7eb;\n  margin: 0 12px;\n  position: relative;\n  top: -9px;\n}\n\n.stepper-step.active .step-number {\n  background: #2563eb;\n  color: white;\n  box-shadow: 0 2px 6px rgba(37, 99, 235, 0.2);\n}\n\n.stepper-step.active .step-label {\n  color: #374151;\n  font-weight: 600;\n}\n\n.stepper-step.completed .step-number {\n  background: #059669;\n  color: white;\n  box-shadow: 0 2px 6px rgba(5, 150, 105, 0.2);\n}\n\n.step-number.has-checkmark {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.stepper-step.completed .step-number {\n  background: #059669;\n  color: white;\n}\n\n.stepper-content {\n  position: relative;\n  overflow-y: auto;\n  overflow-x: hidden;\n  max-height: calc(65vh - 200px);\n  margin-bottom: 0;\n  padding-right: 8px;\n  flex: 1;\n  min-height: 200px;\n}\n\n/* Custom scrollbar styling for stepper content */\n.stepper-content::-webkit-scrollbar {\n  width: 6px;\n}\n\n.stepper-content::-webkit-scrollbar-track {\n  background: rgba(148, 163, 184, 0.1);\n  border-radius: 3px;\n}\n\n.stepper-content::-webkit-scrollbar-thumb {\n  background: linear-gradient(135deg, #94a3b8 0%, #64748b 100%);\n  border-radius: 3px;\n  transition: background 0.2s ease;\n}\n\n.stepper-content::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(135deg, #64748b 0%, #475569 100%);\n}\n\n/* Firefox scrollbar styling */\n.stepper-content {\n  scrollbar-width: thin;\n  scrollbar-color: #94a3b8 rgba(148, 163, 184, 0.1);\n}\n\n.step-content {\n  display: none;\n  opacity: 0;\n  transform: translateX(20px);\n  transition: all 0.3s ease;\n}\n\n.step-content.active {\n  display: block;\n  opacity: 1;\n  transform: translateX(0);\n}\n\n.form-group-row {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n}\n\n.form-group-row label {\n  font-size: 14px;\n  font-weight: 500;\n  color: #374151;\n  margin-bottom: 6px;\n}\n\n.form-group-row-split {\n  display: flex;\n  gap: 12px;\n  margin-bottom: 16px;\n}\n\n.form-group-half {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n}\n\n.form-group-half label {\n  font-size: 14px;\n  font-weight: 500;\n  color: #374151;\n  margin-bottom: 6px;\n}\n\n.type-selector {\n  display: flex;\n  background: #fff;\n  border-radius: 8px;\n  padding: 2px;\n  width: 100%;\n  border: 1px solid #d1d5db;\n  margin-bottom: 8px;\n}\n\n.type-option {\n  flex: 1;\n  padding: 10px;\n  text-align: center;\n  font-weight: 500;\n  border-radius: 6px;\n  cursor: pointer;\n  background: transparent;\n  border: none;\n  transition: all 0.2s ease;\n  color: #64748b;\n}\n\n.type-option.active {\n  background: #2563eb;\n  color: white;\n  box-shadow: 0 2px 6px rgba(37, 99, 235, 0.25);\n}\n\n#custom-event-form input,\n#custom-event-form select {\n  padding: 10px 12px;\n  border-radius: 8px;\n  border: 1px solid #d1d5db;\n  background: #ffffff;\n  color: #374151;\n  width: 100%;\n  box-sizing: border-box;\n  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  font-size: 14px;\n  font-weight: 400;\n  height: 40px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  will-change: border-color, box-shadow;\n}\n\n#custom-event-form input:focus,\n#custom-event-form select:focus {\n  outline: none;\n  border-color: #2563eb;\n  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.08), 0 1px 2px rgba(0, 0, 0, 0.05);\n  background: #ffffff;\n}\n\n#custom-event-form input.error,\n#custom-event-form select.error {\n  border-color: #ef4444;\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);\n  background: linear-gradient(135deg, #fef2f2 0%, #ffffff 100%);\n}\n\n.required-badge {\n  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n  color: white;\n  font-size: 9px;\n  padding: 2px 5px;\n  border-radius: 4px;\n  margin-left: 4px;\n  font-weight: 500;\n  box-shadow: 0 1px 2px rgba(239, 68, 68, 0.3);\n}\n\n#paths-container,\n#attributions-container,\n#selectors-container,\n#attributes-container {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.selector-block,\n.attribute-block {\n  background: #ffffff;\n  border-radius: 8px;\n  padding:16px;\n  position: relative;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  border: 1px solid #e5e7eb;\n}\n\n.selector-header,\n.attribute-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n}\n\n.selector-title,\n.attribute-title {\n  font-size: 15px;\n  font-weight: 600;\n  color: #374151;\n  margin: 0;\n}\n\n.remove-selector-btn,\n.remove-attribute-btn {\n  width: 32px;\n  height: 32px;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  background: transparent;\n  color: #9ca3af;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.remove-selector-btn:hover,\n.remove-attribute-btn:hover {\n  background-color: rgba(239, 68, 68, 0.05);\n  color: #dc2626;\n}\n\n.attribute-fields {\n  display: flex;\n  gap: 12px;\n}\n\n.attribute-name-field {\n  width: 35%;\n  min-width: 150px;\n}\n\n.attribute-value-field {\n  flex: 1;\n}\n\n.attribute-name-select {\n  width: 100%;\n  height: 40px;\n  padding: 10px 12px;\n  border-radius: 8px;\n  border: 1px solid #d1d5db;\n  background: #ffffff;\n  color: #374151;\n  font-size: 14px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n\n.attribute-name-select:focus {\n  outline: none;\n  border-color: #2563eb;\n  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.08), 0 1px 2px rgba(0, 0, 0, 0.05);\n}\n\n.page-pattern-container {\n  display: flex;\n  gap: 12px;\n}\n\n.pattern-operator {\n  width: 35%;\n  min-width: 120px;\n}\n\n.pattern-value {\n  flex: 1;\n}\n\n.form-section-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n}\n\n.form-section-label {\n  font-size: 14px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.form-section-header #add-path-btn,\n.form-section-header #add-attribute-btn,\n.add-selector-btn,\n.add-attribute-btn {\n  padding: 6px 10px;\n  font-size: 12px;\n  height: 28px;\n  min-width: auto;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.add-selector-btn,\n.add-attribute-btn {\n  background: #ffffff;\n  border: 1px dashed #d1d5db;\n  color: #6b7280;\n  border-radius: 8px;\n  padding: 12px;\n  width: 100%;\n  justify-content: center;\n  font-size: 14px;\n  font-weight: 500;\n  margin: 8px 0;\n  transition: all 0.2s ease;\n  cursor: pointer;\n  height: auto;\n}\n\n.add-selector-btn:hover,\n.add-attribute-btn:hover {\n  background: #f9fafb;\n  border-color: #9ca3af;\n  color: #4b5563;\n}\n\n.form-section-header #add-path-btn svg,\n.form-section-header #add-attribute-btn svg {\n  flex-shrink: 0;\n}\n\n#paths-container .path-item {\n  display: grid;\n  grid-template-columns: 1fr 1fr auto;\n  gap: 8px;\n  align-items: center;\n}\n\n#attributions-container .attribute-item {\n  display: grid;\n  grid-template-columns: 1fr 2fr auto;\n  gap: 8px;\n  align-items: center;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  /* margin-top: 20px; */\n  padding: 20px 0 12px 0;\n  border-top: 1px solid #e2e8f0;\n  border-radius: 0 0 10px 10px;\n  margin-left: -20px;\n  margin-right: -20px;\n  padding-left: 20px;\n  padding-right: 20px;\n  flex-shrink: 0;\n}\n\n#add-path-btn,\n#add-attribute-btn,\n.remove-path-btn,\n.remove-attribute-btn,\n#next-step-btn {\n  padding: 8px 16px;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.25s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  border: 1px solid transparent;\n  font-weight: 500;\n  font-size: 14px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  will-change: transform, box-shadow;\n}\n\n.remove-path-btn,\n.remove-attribute-btn {\n  padding: 6px;\n  width: 36px;\n  height: 36px;\n  gap: 0;\n}\n\n.remove-path-btn svg,\n.remove-attribute-btn svg {\n  flex-shrink: 0;\n}\n\n#add-path-btn,\n#add-attribute-btn {\n  background: linear-gradient(135deg, #64748b 0%, #475569 100%);\n  color: white;\n  border-color: #334155;\n  box-shadow: 0 2px 4px rgba(100, 116, 139, 0.3);\n}\n\n#add-path-btn:hover,\n#add-attribute-btn:hover {\n  background: linear-gradient(135deg, #475569 0%, #334155 100%);\n  transform: translateY(-1px);\n  box-shadow: 0 3px 8px rgba(100, 116, 139, 0.4);\n}\n\n.remove-path-btn,\n.remove-attribute-btn {\n  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n  color: white;\n  border-color: #b91c1c;\n  box-shadow: 0 2px 4px rgba(239, 68, 68, 0.3);\n}\n\n.remove-path-btn:hover,\n.remove-attribute-btn:hover {\n  background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%);\n  transform: translateY(-1px);\n  box-shadow: 0 3px 8px rgba(239, 68, 68, 0.4);\n}\n\n[name=\"cssSelector\"] {\n  background: #ffffff !important;\n  border-color: #94a3b8 !important;\n  color: #1e293b !important;\n  font-family: 'SF Mono', 'Monaco', 'Cascadia Code', 'Roboto Mono', monospace !important;\n  font-size: 12px !important;\n}\n\n#next-step-btn {\n  background: #2563eb;\n  color: white;\n  border-color: #1d4ed8;\n  font-weight: 600;\n  box-shadow: 0 2px 8px rgba(37, 99, 235, 0.25);\n  min-width: 120px;\n  position: relative;\n  overflow: hidden;\n}\n\n#next-step-btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);\n  transition: left 0.6s ease;\n}\n\n#next-step-btn:hover::before {\n  left: 100%;\n}\n\n#next-step-btn:hover {\n  background: #1d4ed8;\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(37, 99, 235, 0.35);\n}\n\n#next-step-btn svg {\n  margin-left: 6px;\n  transition: transform 0.2s ease;\n  flex-shrink: 0;\n}\n\n#next-step-btn:hover svg {\n  transform: translateX(2px);\n}\n\n#prev-step-btn,\n#cancel-btn {\n  padding: 8px 16px;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  background: #fff;\n  border: 1px solid #d1d5db;\n  color: #4b5563;\n  height: 40px;\n  transition: all 0.25s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  min-width: 120px;\n}\n\n#prev-step-btn:hover,\n#cancel-btn:hover {\n  background: #f9fafb;\n  border-color: #9ca3af;\n  transform: translateY(-1px);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n#prev-step-btn svg {\n  margin-right: 2px;\n  transition: transform 0.2s ease;\n  flex-shrink: 0;\n}\n\n#prev-step-btn:hover svg {\n  transform: translateX(-2px);\n}\n\n#prev-step-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n  background: #f8fafc;\n  transform: none;\n  box-shadow: none;\n}\n\n#prev-step-btn:disabled svg {\n  transform: none;\n}\n\n.api-message {\n  padding: 12px 16px;\n  border-radius: 8px;\n  margin-top: 16px;\n  font-weight: 500;\n  animation: slideIn 0.3s ease;\n  font-size: 14px;\n}\n\n.api-message.success {\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n  color: white;\n  border: 1px solid #047857;\n  box-shadow: 0 2px 8px rgba(16, 185, 129, 0.3);\n}\n\n.api-message.error {\n  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n  color: white;\n  border: 1px solid #b91c1c;\n  box-shadow: 0 2px 8px rgba(239, 68, 68, 0.3);\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.constant-event-highlighter {\n  position: absolute;\n  box-sizing: border-box;\n  border: 2px solid #3b82f6;\n  border-radius: 4px;\n  background-color: rgba(59, 130, 246, 0.2);\n  z-index: 9998;\n  pointer-events: all;\n  cursor: pointer;\n  animation: pulse-blue 2s infinite;\n}\n\n.constant-event-tooltip {\n  position: absolute;\n  z-index: 999;\n  pointer-events: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.constant-event-tooltip .tooltip-event-name {\n  background-color: #3b82f6;\n  color: #ffffff;\n  padding: 6px 12px;\n  border-radius: 4px;\n  font-weight: bold;\n  font-size: 14px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n}\n\n@keyframes pulse-blue {\n  0% {\n    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);\n  }\n  70% {\n    box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);\n  }\n}\n\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://InspectorToolbar/./src/styles.css?./node_modules/css-loader/dist/cjs.js\n}");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("{\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://InspectorToolbar/./node_modules/css-loader/dist/runtime/api.js?\n}");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("{\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://InspectorToolbar/./node_modules/css-loader/dist/runtime/noSourceMaps.js?\n}");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("{\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://InspectorToolbar/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?\n}");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("{\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://InspectorToolbar/./node_modules/style-loader/dist/runtime/insertBySelector.js?\n}");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("{\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://InspectorToolbar/./node_modules/style-loader/dist/runtime/insertStyleElement.js?\n}");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("{\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://InspectorToolbar/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?\n}");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("{\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://InspectorToolbar/./node_modules/style-loader/dist/runtime/styleDomAPI.js?\n}");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("{\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://InspectorToolbar/./node_modules/style-loader/dist/runtime/styleTagTransform.js?\n}");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _styles_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles.css */ \"./src/styles.css\");\n\n\nclass InspectorToolbar {\n  _getEvents() {\n    const events = this.options.events;\n\n    if (Array.isArray(events)) {\n      return events;\n    }\n\n    return [];\n  }\n\n  constructor(options = {}) {\n    this.options = {\n      ...options\n    };\n    \n    this.toolbar = null;\n    this.isVisible = false;\n    this.isInspecting = false;\n    this.highlighter = null;\n    this.tooltip = null;\n    this.currentStep = 1;\n    this.totalSteps = 3;\n    this.selectorCount = 1;\n    this.attributeCount = 1;\n    this.completedSteps = [];\n  }\n\n  init() {\n    this.createToolbar();\n    this.attachToPage();\n    this.createInspectorElements();\n    this.showConstantEvents();\n    return this;\n  }\n\n  createToolbar() {\n    this.toolbar = document.createElement('div');\n    this.toolbar.className = 'inspector-toolbar';\n    this.toolbar.innerHTML = `\n      <div class=\"inspector-toolbar-content\">\n        <div class=\"toolbar-left\">\n          <div class=\"toolbar-logo\">\n            Event Builder\n          </div>\n        </div>\n        <div class=\"toolbar-right\">\n          <button class=\"inspector-toolbar-collapse\">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <polyline points=\"6,9 12,15 18,9\"></polyline>\n            </svg>\n          </button>\n        </div>\n      </div>\n      <div class=\"custom-event-form-container collapsed\">\n        <form id=\"custom-event-form\">\n          <div class=\"stepper-container\">\n            <div class=\"stepper-header\">\n              <div class=\"stepper-title\">Event Builder</div>\n            </div>\n            \n            <div class=\"stepper-progress\">\n              <div class=\"stepper-step active\" data-step=\"1\">\n                <div class=\"step-number\">1</div>\n                <div class=\"step-label\">Event Info</div>\n              </div>\n              <div class=\"stepper-connector\"></div>\n              <div class=\"stepper-step\" data-step=\"2\">\n                <div class=\"step-number\">2</div>\n                <div class=\"step-label\">Selectors</div>\n              </div>\n              <div class=\"stepper-connector\"></div>\n              <div class=\"stepper-step\" data-step=\"3\">\n                <div class=\"step-number\">3</div>\n                <div class=\"step-label\">Attributes</div>\n              </div>\n            </div>\n\n            <div class=\"stepper-content\">\n              <!-- Step 1: Event Info -->\n              <div class=\"step-content active\" data-step=\"1\">\n                <div class=\"form-group-row\">\n                  <label>Type</label>\n                  <div class=\"type-selector\">\n                    <button type=\"button\" class=\"type-option active\" data-type=\"key\">Key</button>\n                    <button type=\"button\" class=\"type-option\" data-type=\"general\">General</button>\n                  </div>\n                </div>\n                \n                <div class=\"form-group-row\">\n                  <label for=\"event-name\">Name</label>\n                  <input type=\"text\" id=\"event-name\" name=\"eventName\" placeholder=\"Add to cart\" required>\n                </div>\n                \n                <div class=\"form-group-row-split\">\n                  <div class=\"form-group-half\">\n                    <label for=\"event-category\">Event Category</label>\n                    <select id=\"event-category\" name=\"category\" required>\n                      <option value=\"e-commerce\">E-Commerce</option>\n                      <option value=\"engagement\">Engagement</option>\n                      <option value=\"analytics\">Analytics</option>\n                    </select>\n                  </div>\n                  <div class=\"form-group-half\">\n                    <label for=\"event-type\">Event</label>\n                    <select id=\"event-type\" name=\"eventType\" required>\n                      <option value=\"DA_ADD_ITEM_TO_CART\">DA_ADD_ITEM_TO_CART</option>\n                      <option value=\"click\">Click</option>\n                      <option value=\"scroll\">Scroll</option>\n                      <option value=\"submit\">Submit</option>\n                    </select>\n                  </div>\n                </div>\n                \n                <div class=\"form-group-row-split\">\n                  <div class=\"form-group-half\">\n                    <label for=\"event-trigger\">Event Trigger</label>\n                    <select id=\"event-trigger\" name=\"eventTrigger\" required>\n                      <option value=\"click\">Click</option>\n                      <option value=\"scroll\">Scroll</option>\n                      <option value=\"hover\">Hover</option>\n                    </select>\n                  </div>\n                  <div class=\"form-group-half\">\n                    <label for=\"count-type\">Count Type</label>\n                    <select id=\"count-type\" name=\"countType\" required>\n                      <option value=\"per_event\">Per event</option>\n                      <option value=\"once\">Once</option>\n                      <option value=\"every_time\">Every Time</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Step 2: Selectors -->\n              <div class=\"step-content\" data-step=\"2\">\n                <div id=\"selectors-container\">\n                  <!-- Selector 1 -->\n                  <div class=\"selector-block\" data-selector-id=\"1\">\n                    <div class=\"selector-header\">\n                      <h3 class=\"selector-title\">Selector 1</h3>\n                      <button type=\"button\" class=\"remove-selector-btn\" title=\"Remove Selector\">\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                          <polyline points=\"3 6 5 6 21 6\"></polyline>\n                          <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n                        </svg>\n                      </button>\n                    </div>\n                    \n                    <div class=\"form-group-row\">\n                      <label>Element Selector</label>\n                      <div class=\"input-with-icon\">\n                        <input type=\"text\" name=\"elementSelector[]\" placeholder=\"#add_to_cart\" required>\n                        <button type=\"button\" class=\"selector-inspect-btn toolbar-button icon-button\" title=\"Inspect Element\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-crosshair\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"22\" y1=\"12\" x2=\"18\" y2=\"12\"></line><line x1=\"6\" y1=\"12\" x2=\"2\" y2=\"12\"></line><line x1=\"12\" y1=\"6\" x2=\"12\" y2=\"2\"></line><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\"></line></svg>\n                        </button>\n                      </div>\n                    </div>\n                    \n                    <div class=\"form-group-row\">\n                      <label>Page Pattern (Optional)</label>\n                      <div class=\"page-pattern-container\">\n                        <div class=\"pattern-operator\">\n                          <select name=\"patternOperator[]\" class=\"pattern-operator-select\">\n                            <option value=\"equals\">Equals</option>\n                            <option value=\"contains\">Contains</option>\n                            <option value=\"startsWith\">Starts with</option>\n                            <option value=\"endsWith\">Ends with</option>\n                            <option value=\"regex\">Regex</option>\n                          </select>\n                        </div>\n                        <input type=\"text\" name=\"patternValue[]\" class=\"pattern-value\" placeholder=\"Value\">\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <!-- Add Selector Button -->\n                  <button type=\"button\" id=\"add-selector-btn\" class=\"add-selector-btn\">\n                    <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n                      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                    </svg>\n                    Add Another Selector\n                  </button>\n                </div>\n              </div>\n              \n              <!-- Step 3: Attributes -->\n              <div class=\"step-content\" data-step=\"3\">\n                <div id=\"attributes-container\">\n                  <!-- Attribute 1 -->\n                  <div class=\"attribute-block\" data-attribute-id=\"1\">\n                    <div class=\"attribute-header\">\n                      <h3 class=\"attribute-title\">Attribute 1 (Optional)</h3>\n                      <button type=\"button\" class=\"remove-attribute-btn\" title=\"Remove Attribute\">\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                          <polyline points=\"3 6 5 6 21 6\"></polyline>\n                          <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n                        </svg>\n                      </button>\n                    </div>\n                    \n                    <div class=\"attribute-fields\">\n                      <div class=\"attribute-name-field\">\n                        <select name=\"attributeName[]\" class=\"attribute-name-select\">\n                          <option value=\"\">Select Name</option>\n                          <option value=\"id\">ID</option>\n                          <option value=\"class\">Class</option>\n                          <option value=\"data-value\">Data Value</option>\n                          <option value=\"text\">Text Content</option>\n                          <option value=\"href\">Link (href)</option>\n                          <option value=\"src\">Image Source</option>\n                          <option value=\"alt\">Alt Text</option>\n                          <option value=\"title\">Title</option>\n                          <option value=\"custom\">Custom</option>\n                        </select>\n                      </div>\n                      \n                      <div class=\"attribute-value-field\">\n                        <div class=\"input-with-icon\">\n                          <input type=\"text\" name=\"attributeValue[]\" placeholder=\"Like &#34;#sale.price&#34;\">\n                          <button type=\"button\" class=\"inspect-attribute-btn toolbar-button icon-button\" title=\"Inspect Element\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-crosshair\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"22\" y1=\"12\" x2=\"18\" y2=\"12\"></line><line x1=\"6\" y1=\"12\" x2=\"2\" y2=\"12\"></line><line x1=\"12\" y1=\"6\" x2=\"12\" y2=\"2\"></line><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\"></line></svg>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <!-- Add Attribute Button -->\n                  <button type=\"button\" id=\"add-attribute-btn\" class=\"add-attribute-btn\">\n                    <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                      <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n                      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n                    </svg>\n                    Add New\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"form-actions\">\n              <button type=\"button\" id=\"cancel-btn\" class=\"secondary-btn\">Cancel</button>\n              <button type=\"button\" id=\"prev-step-btn\" class=\"secondary-btn\" disabled>\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <polyline points=\"15 18 9 12 15 6\"></polyline>\n                </svg>\n                Previous\n              </button>\n              <button type=\"button\" id=\"next-step-btn\">\n                Next\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <polyline points=\"9 18 15 12 9 6\"></polyline>\n                </svg>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    `;\n\n    this.applyStyles();\n    this.bindEvents();\n  }\n\n  createInspectorElements() {\n    this.highlighter = document.createElement('div');\n    this.highlighter.className = 'inspector-highlighter';\n    document.body.appendChild(this.highlighter);\n\n    this.tooltip = document.createElement('div');\n    this.tooltip.className = 'inspector-tooltip';\n    document.body.appendChild(this.tooltip);\n  }\n\n  applyStyles() {\n    const initialY = this.options.position === 'top' ? '-100%' : '100%';\n    Object.assign(this.toolbar.style, {\n      position: 'fixed',\n      bottom: this.options.position === 'bottom' ? '32px' : '60px',\n      left: '50%',\n      height: this.options.height,\n      backgroundColor: this.options.backgroundColor,\n      color: this.options.textColor,\n      zIndex: '9999',\n      transform: `translateX(-50%) translateY(${initialY})`,\n      transition: 'transform 0.3s ease'\n    });\n  }\n\n  bindEvents() {\n    const collapseBtn = this.toolbar.querySelector('.inspector-toolbar-collapse');\n    collapseBtn.addEventListener('click', () => this.toggleCollapse());\n\n    // const hideBtn = this.toolbar.querySelector('#hide-toolbar-btn');\n    // hideBtn.addEventListener('click', () => this.hide());\n\n    // const createEventBtn = this.toolbar.querySelector('#create-event-btn');\n    // createEventBtn.addEventListener('click', () => this.toggleEventForm());\n\n    const addPathBtn = this.toolbar.querySelector('#add-path-btn');\n    if (addPathBtn) {\n      addPathBtn.addEventListener('click', () => this.addPathInput());\n    }\n\n    const addAttributeBtn = this.toolbar.querySelector('#add-attribute-btn');\n    addAttributeBtn.addEventListener('click', () => this.addAttribute());\n    \n    // Add Selector button\n    const addSelectorBtn = this.toolbar.querySelector('#add-selector-btn');\n    addSelectorBtn.addEventListener('click', () => this.addSelector());\n    \n    // Stepper navigation\n    const nextStepBtn = this.toolbar.querySelector('#next-step-btn');\n    const prevStepBtn = this.toolbar.querySelector('#prev-step-btn');\n    const cancelBtn = this.toolbar.querySelector('#cancel-btn');\n    \n    nextStepBtn.addEventListener('click', () => this.nextStep());\n    prevStepBtn.addEventListener('click', () => this.prevStep());\n    cancelBtn.addEventListener('click', () => this.closeEventForm());\n    \n    // Type selector buttons\n    const typeOptions = this.toolbar.querySelectorAll('.type-option');\n    typeOptions.forEach(option => {\n      option.addEventListener('click', () => {\n        typeOptions.forEach(btn => btn.classList.remove('active'));\n        option.classList.add('active');\n      });\n    });\n\n    const form = this.toolbar.querySelector('#custom-event-form');\n    form.addEventListener('submit', (e) => this.handleFormSubmit(e));\n    \n    // Add real-time validation\n    form.addEventListener('input', (e) => {\n      if (e.target.hasAttribute('required')) {\n        this.validateField(e.target);\n      }\n    });\n    \n    form.addEventListener('blur', (e) => {\n      if (e.target.hasAttribute('required')) {\n        this.validateField(e.target);\n      }\n    });\n    \n    this.toolbar.addEventListener('click', (e) => {\n      if (e.target.classList.contains('remove-path-btn')) {\n        this.removePathInput(e.target);\n      }\n      if (e.target.closest('.remove-attribute-btn')) {\n        this.removeAttribute(e.target.closest('.attribute-block'));\n      }\n      if (e.target.closest('.inspect-attribute-btn')) {\n        this.activeAttributeValueInput = e.target.closest('.input-with-icon').querySelector('input');\n        this.toggleInspector();\n      }\n      if (e.target.closest('.selector-inspect-btn')) {\n        const inputField = e.target.closest('.input-with-icon').querySelector('input[name=\"elementSelector[]\"]');\n        this.activeAttributeValueInput = inputField;\n        this.toggleInspector();\n      }\n      if (e.target.closest('.remove-selector-btn')) {\n        this.removeSelector(e.target.closest('.selector-block'));\n      }\n      if (e.target.closest('.stepper-step')) {\n        const stepElement = e.target.closest('.stepper-step');\n        const stepNumber = parseInt(stepElement.dataset.step);\n        if (!stepElement.classList.contains('active') && this.isStepAccessible(stepNumber)) {\n          this.goToStep(stepNumber);\n        }\n      }\n    });\n    \n    this.boundHandleMouseOver = this.handleMouseOver.bind(this);\n    this.boundHandleMouseOut = this.handleMouseOut.bind(this);\n    this.boundHandleClick = this.handleClick.bind(this);\n  }\n\n  attachToPage() {\n    document.body.appendChild(this.toolbar);\n  }\n\n  toggleInspector() {\n    this.isInspecting = !this.isInspecting;\n    if (this.isInspecting) {\n      this.startInspecting();\n      // Auto-collapse form when starting inspection for better visibility\n      this.collapseForm();\n    } else {\n      this.stopInspecting();\n    }\n  }\n\n  startInspecting() {\n    document.body.style.cursor = 'crosshair';\n    // Add active class to all inspect buttons to show they're in inspection mode\n    const inspectButtons = this.toolbar.querySelectorAll('.selector-inspect-btn, .inspect-attribute-btn');\n    inspectButtons.forEach(btn => btn.classList.add('active'));\n    document.addEventListener('mouseover', this.boundHandleMouseOver);\n    document.addEventListener('mouseout', this.boundHandleMouseOut);\n    document.addEventListener('click', this.boundHandleClick, true);\n  }\n\n  stopInspecting() {\n    document.body.style.cursor = 'default';\n    // Remove active class from all inspect buttons\n    const inspectButtons = this.toolbar.querySelectorAll('.selector-inspect-btn, .inspect-attribute-btn');\n    inspectButtons.forEach(btn => btn.classList.remove('active'));\n    this.highlighter.style.display = 'none';\n    this.tooltip.style.display = 'none';\n    document.removeEventListener('mouseover', this.boundHandleMouseOver);\n    document.removeEventListener('mouseout', this.boundHandleMouseOut);\n    document.removeEventListener('click', this.boundHandleClick, true);\n  }\n\n  handleMouseOver(e) {\n    if (!this.isInspecting) return;\n    const target = e.target;\n    if (target === this.toolbar || this.toolbar.contains(target) || target === this.highlighter || target === this.tooltip) {\n      this.highlighter.style.display = 'none';\n      this.tooltip.style.display = 'none';\n      return;\n    }\n    const rect = target.getBoundingClientRect();\n    this.highlighter.style.display = 'block';\n    this.highlighter.style.top = `${rect.top + window.scrollY}px`;\n    this.highlighter.style.left = `${rect.left + window.scrollX}px`;\n    this.highlighter.style.width = `${rect.width}px`;\n    this.highlighter.style.height = `${rect.height}px`;\n\n    const selector = this.getCssSelector(target);\n    this.tooltip.style.display = 'block';\n    this.tooltip.style.top = `${rect.top + window.scrollY - 30}px`;\n    this.tooltip.style.left = `${rect.left + window.scrollX}px`;\n    this.tooltip.textContent = selector;\n  }\n  \n  handleMouseOut() {\n    if (!this.isInspecting) return;\n    this.highlighter.style.display = 'none';\n    this.tooltip.style.display = 'none';\n  }\n\n  showEvent(event) {\n    if (!event || !event.cssSelector) {\n      console.error('Event with a cssSelector is required.');\n      return;\n    }\n  \n    const target = document.querySelector(event.cssSelector);\n    if (!target) {\n      console.error(`Element with selector \"${event.cssSelector}\" not found.`);\n      return;\n    }\n  \n    const rect = target.getBoundingClientRect();\n  \n    const highlighter = document.createElement('div');\n    highlighter.className = 'constant-event-highlighter';\n    document.body.appendChild(highlighter);\n  \n    const tooltip = document.createElement('div');\n    tooltip.className = 'constant-event-tooltip';\n    document.body.appendChild(tooltip);\n\n    highlighter.addEventListener('click', (e) => {\n      e.stopPropagation();\n      console.log('Event clicked:', event);\n    });\n  \n    Object.assign(highlighter.style, {\n      top: `${rect.top + window.scrollY}px`,\n      left: `${rect.left + window.scrollX}px`,\n      width: `${rect.width}px`,\n      height: `${rect.height}px`,\n    });\n  \n    Object.assign(tooltip.style, {\n      top: `${rect.top + window.scrollY - 10}px`,\n      left: `${rect.left + window.scrollX}px`,\n      transform: 'translateY(-100%)',\n    });\n  \n    tooltip.innerHTML = `\n      <div class=\"tooltip-event-name\">${event.eventName || 'Event'}</div>\n    `;\n  }\n  \n  showConstantEvents() {\n    const events = this._getEvents();\n    events.forEach(event => this.showEvent(event));\n  }\n\n  handleClick(e) {\n    if (!this.isInspecting) return;\n    \n    const target = e.target;\n    if (target === this.toolbar || this.toolbar.contains(target)) {\n      return;\n    }\n    \n    e.preventDefault();\n    e.stopPropagation();\n\n    const selector = this.getCssSelector(target);\n    if (this.activeAttributeValueInput) {\n      this.activeAttributeValueInput.value = selector;\n      this.activeAttributeValueInput = null;\n    } else {\n      this.toolbar.querySelector('#css-selector').value = selector;\n    }\n    this.toggleInspector();\n    \n    // Auto-expand form when element is selected so user can see the populated content\n    this.expandForm();\n  }\n\n  toggleEventForm() {\n    const formContainer = this.toolbar.querySelector('.custom-event-form-container');\n    const createEventBtn = this.toolbar.querySelector('#create-event-btn');\n    const isVisible = !formContainer.classList.contains('collapsed');\n    \n    if (isVisible) {\n      this.collapseForm();\n    } else {\n      this.expandForm();\n      // Reset to first step when opening the form\n      this.goToStep(1);\n    }\n    \n    createEventBtn.classList.toggle('active', !isVisible);\n  }\n\n  addPathInput() {\n    const pathsContainer = this.toolbar.querySelector('#paths-container');\n    const newPathItem = document.createElement('div');\n    newPathItem.className = 'path-item';\n    newPathItem.innerHTML = `\n      <input type=\"text\" name=\"pathType[]\" placeholder=\"Type\" class=\"path-type\" required>\n      <input type=\"text\" name=\"pathValue[]\" placeholder=\"Value\" class=\"path-value\" required>\n      <button type=\"button\" class=\"remove-path-btn\">\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n          <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n        </svg>\n      </button>\n    `;\n    pathsContainer.appendChild(newPathItem);\n  }\n\n  removePathInput(button) {\n    button.parentElement.remove();\n  }\n\n  addAttribute() {\n    this.attributeCount++;\n    const attributesContainer = this.toolbar.querySelector('#attributes-container');\n    const addButton = this.toolbar.querySelector('#add-attribute-btn');\n    \n    const newAttribute = document.createElement('div');\n    newAttribute.className = 'attribute-block';\n    newAttribute.dataset.attributeId = this.attributeCount;\n    \n    newAttribute.innerHTML = `\n      <div class=\"attribute-header\">\n        <h3 class=\"attribute-title\">Attribute ${this.attributeCount} (Optional)</h3>\n        <button type=\"button\" class=\"remove-attribute-btn\" title=\"Remove Attribute\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <polyline points=\"3 6 5 6 21 6\"></polyline>\n            <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n          </svg>\n        </button>\n      </div>\n      \n      <div class=\"attribute-fields\">\n        <div class=\"attribute-name-field\">\n          <select name=\"attributeName[]\" class=\"attribute-name-select\">\n            <option value=\"\">Select Name</option>\n            <option value=\"id\">ID</option>\n            <option value=\"class\">Class</option>\n            <option value=\"data-value\">Data Value</option>\n            <option value=\"text\">Text Content</option>\n            <option value=\"href\">Link (href)</option>\n            <option value=\"src\">Image Source</option>\n            <option value=\"alt\">Alt Text</option>\n            <option value=\"title\">Title</option>\n            <option value=\"custom\">Custom</option>\n          </select>\n        </div>\n        \n        <div class=\"attribute-value-field\">\n          <div class=\"input-with-icon\">\n            <input type=\"text\" name=\"attributeValue[]\" placeholder=\"Like &#34;#sale.price&#34;\">\n            <button type=\"button\" class=\"inspect-attribute-btn toolbar-button icon-button\" title=\"Inspect Element\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-crosshair\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"22\" y1=\"12\" x2=\"18\" y2=\"12\"></line><line x1=\"6\" y1=\"12\" x2=\"2\" y2=\"12\"></line><line x1=\"12\" y1=\"6\" x2=\"12\" y2=\"2\"></line><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\"></line></svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    `;\n    \n    // Insert before the add button\n    attributesContainer.insertBefore(newAttribute, addButton);\n  }\n\n  removeAttribute(attributeBlock) {\n    // Don't remove if it's the last attribute\n    const attributes = this.toolbar.querySelectorAll('.attribute-block');\n    if (attributes.length <= 1) return;\n    \n    attributeBlock.remove();\n    \n    // Update the titles of the remaining attributes\n    const remainingAttributes = this.toolbar.querySelectorAll('.attribute-block');\n    remainingAttributes.forEach((attribute, index) => {\n      const title = attribute.querySelector('.attribute-title');\n      title.textContent = `Attribute ${index + 1} (Optional)`;\n      attribute.dataset.attributeId = index + 1;\n    });\n    \n    this.attributeCount = remainingAttributes.length;\n  }\n  \n  markStepCompleted(stepNumber) {\n    if (!this.completedSteps.includes(stepNumber)) {\n      this.completedSteps.push(stepNumber);\n    }\n    \n    // Update the step indicator UI to show completion\n    const steps = this.toolbar.querySelectorAll('.stepper-step');\n    const stepElement = steps[stepNumber - 1];\n    \n    if (stepElement) {\n      stepElement.classList.add('completed');\n      \n      // Update the step number to a checkmark for completed steps\n      const stepNumberElement = stepElement.querySelector('.step-number');\n      if (stepNumberElement && !stepNumberElement.classList.contains('has-checkmark')) {\n        stepNumberElement.classList.add('has-checkmark');\n        stepNumberElement.innerHTML = `\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <polyline points=\"20 6 9 17 4 12\"></polyline>\n          </svg>\n        `;\n      }\n    }\n  }\n  \n  isStepAccessible(stepNumber) {\n    // First step is always accessible\n    if (stepNumber === 1) return true;\n    \n    // For other steps, they're only accessible if previous steps are completed\n    return this.completedSteps.includes(stepNumber - 1) || this.currentStep >= stepNumber;\n  }\n  \n  addSelector() {\n    this.selectorCount++;\n    const selectorsContainer = this.toolbar.querySelector('#selectors-container');\n    const addButton = this.toolbar.querySelector('#add-selector-btn');\n    \n    const newSelector = document.createElement('div');\n    newSelector.className = 'selector-block';\n    newSelector.dataset.selectorId = this.selectorCount;\n    \n    newSelector.innerHTML = `\n      <div class=\"selector-header\">\n        <h3 class=\"selector-title\">Selector ${this.selectorCount}</h3>\n        <button type=\"button\" class=\"remove-selector-btn\" title=\"Remove Selector\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <polyline points=\"3 6 5 6 21 6\"></polyline>\n            <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n          </svg>\n        </button>\n      </div>\n      \n      <div class=\"form-group-row\">\n        <label>Element Selector</label>\n        <div class=\"input-with-icon\">\n          <input type=\"text\" name=\"elementSelector[]\" placeholder=\"Like &#34;#sale.addtocart&#34;\" required>\n          <button type=\"button\" class=\"selector-inspect-btn toolbar-button icon-button\" title=\"Inspect Element\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-crosshair\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"22\" y1=\"12\" x2=\"18\" y2=\"12\"></line><line x1=\"6\" y1=\"12\" x2=\"2\" y2=\"12\"></line><line x1=\"12\" y1=\"6\" x2=\"12\" y2=\"2\"></line><line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"18\"></line></svg>\n          </button>\n        </div>\n      </div>\n      \n      <div class=\"form-group-row\">\n        <label>Page Pattern (Optional)</label>\n        <div class=\"page-pattern-container\">\n          <div class=\"pattern-operator\">\n            <select name=\"patternOperator[]\" class=\"pattern-operator-select\">\n              <option value=\"equals\">Equals</option>\n              <option value=\"contains\">Contains</option>\n              <option value=\"startsWith\">Starts with</option>\n              <option value=\"endsWith\">Ends with</option>\n              <option value=\"regex\">Regex</option>\n            </select>\n          </div>\n          <input type=\"text\" name=\"patternValue[]\" class=\"pattern-value\" placeholder=\"Value\">\n        </div>\n      </div>\n    `;\n    \n    // Insert before the add button\n    selectorsContainer.insertBefore(newSelector, addButton);\n  }\n  \n  removeSelector(selectorBlock) {\n    // Don't remove if it's the last selector\n    const selectors = this.toolbar.querySelectorAll('.selector-block');\n    if (selectors.length <= 1) return;\n    \n    selectorBlock.remove();\n    \n    // Update the titles of the remaining selectors\n    const remainingSelectors = this.toolbar.querySelectorAll('.selector-block');\n    remainingSelectors.forEach((selector, index) => {\n      const title = selector.querySelector('.selector-title');\n      title.textContent = `Selector ${index + 1}`;\n      selector.dataset.selectorId = index + 1;\n    });\n    \n    this.selectorCount = remainingSelectors.length;\n  }\n\n  nextStep() {\n    if (this.currentStep < this.totalSteps) {\n      // Validate current step\n      const isValid = this.validateStep(this.currentStep);\n      if (!isValid) return;\n      \n      // Mark current step as completed\n      this.markStepCompleted(this.currentStep);\n      \n      // Move to next step\n      this.goToStep(this.currentStep + 1);\n    } else {\n      // On last step, submit form\n      this.handleFormSubmit(new Event('submit'));\n    }\n  }\n  \n  prevStep() {\n    if (this.currentStep > 1) {\n      this.goToStep(this.currentStep - 1);\n    }\n  }\n  \n  goToStep(stepNumber) {\n    if (stepNumber < 1 || stepNumber > this.totalSteps) return;\n    \n    // Update buttons\n    const prevStepBtn = this.toolbar.querySelector('#prev-step-btn');\n    const nextStepBtn = this.toolbar.querySelector('#next-step-btn');\n    \n    prevStepBtn.disabled = stepNumber === 1;\n    \n    if (stepNumber === this.totalSteps) {\n      nextStepBtn.innerHTML = `\n        Save & Done\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"></path>\n          <polyline points=\"17,21 17,13 7,13 7,21\"></polyline>\n          <polyline points=\"7,3 7,8 15,8\"></polyline>\n        </svg>\n      `;\n    } else {\n      nextStepBtn.innerHTML = `\n        Next\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <polyline points=\"9 18 15 12 9 6\"></polyline>\n        </svg>\n      `;\n    }\n    \n    // Update active step in UI\n    const steps = this.toolbar.querySelectorAll('.stepper-step');\n    const contents = this.toolbar.querySelectorAll('.step-content');\n    \n    steps.forEach(step => step.classList.remove('active'));\n    contents.forEach(content => content.classList.remove('active'));\n    \n    steps[stepNumber - 1].classList.add('active');\n    contents[stepNumber - 1].classList.add('active');\n    \n    this.currentStep = stepNumber;\n  }\n  \n  validateStep(step) {\n    this.clearValidationErrors();\n    let hasErrors = false;\n    const stepContent = this.toolbar.querySelector(`.step-content[data-step=\"${step}\"]`);\n    \n    if (step === 1) {\n      // Validate Event Info fields\n      const requiredFields = ['eventName', 'category', 'eventType', 'eventTrigger', 'countType'];\n      requiredFields.forEach(fieldName => {\n        const field = stepContent.querySelector(`[name=\"${fieldName}\"]`);\n        if (!field.value.trim()) {\n          field.classList.add('error');\n          hasErrors = true;\n        }\n      });\n    } else if (step === 2) {\n      // Validate Element Selectors - at least one must be valid\n      const selectorInputs = stepContent.querySelectorAll('input[name=\"elementSelector[]\"]');\n      let hasValidSelector = false;\n      \n      for (const selectorInput of selectorInputs) {\n        if (selectorInput.value.trim()) {\n          hasValidSelector = true;\n          selectorInput.classList.remove('error');\n        } else {\n          selectorInput.classList.add('error');\n        }\n      }\n      \n      if (!hasValidSelector) {\n        hasErrors = true;\n      }\n    } else if (step === 3) {\n      // Validate attributes - attributes are optional, so no validation errors\n      // Just remove any existing error classes\n      const attributeNameFields = stepContent.querySelectorAll('select[name=\"attributeName[]\"]');\n      const attributeValueFields = stepContent.querySelectorAll('input[name=\"attributeValue[]\"]');\n      \n      attributeNameFields.forEach(field => field.classList.remove('error'));\n      attributeValueFields.forEach(field => field.classList.remove('error'));\n    }\n    \n    return !hasErrors;\n  }\n  \n  closeEventForm() {\n    this.currentStep = 1;\n    this.collapseForm();\n    this.toolbar.querySelector('#custom-event-form').reset();\n    this.clearValidationErrors();\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    \n    // Validate all steps\n    for (let step = 1; step <= this.totalSteps; step++) {\n      const isValid = this.validateStep(step);\n      if (!isValid) {\n        this.goToStep(step);\n        return;\n      }\n    }\n    \n    const formData = new FormData(this.toolbar.querySelector('#custom-event-form'));\n    const data = {\n      eventName: formData.get('eventName'),\n      category: formData.get('category'),\n      eventType: formData.get('eventType'),\n      eventTrigger: formData.get('eventTrigger'),\n      countType: formData.get('countType'),\n      selectors: []\n    };\n    \n    // Get selectors data\n    const elementSelectors = formData.getAll('elementSelector[]');\n    const patternOperators = formData.getAll('patternOperator[]');\n    const patternValues = formData.getAll('patternValue[]');\n    \n    for (let i = 0; i < elementSelectors.length; i++) {\n      data.selectors.push({\n        elementSelector: elementSelectors[i],\n        pattern: {\n          operator: patternOperators[i],\n          value: patternValues[i]\n        }\n      });\n    }\n    \n    // Get attributes\n    const attributeNames = formData.getAll('attributeName[]');\n    const attributeValues = formData.getAll('attributeValue[]');\n    data.attributes = [];\n    \n    for (let i = 0; i < attributeNames.length; i++) {\n      if (attributeNames[i] && attributeValues[i].trim()) {\n        data.attributes.push({\n          name: attributeNames[i],\n          value: attributeValues[i]\n        });\n      }\n    }\n    \n    this.showLoadingState();\n    this.callApi(data);\n  }\n\n  showLoadingState() {\n    const submitBtn = this.toolbar.querySelector('#custom-event-form button[type=\"submit\"]');\n    submitBtn.disabled = true;\n    submitBtn.textContent = 'Creating Event...';\n  }\n\n  hideLoadingState() {\n    const submitBtn = this.toolbar.querySelector('#custom-event-form button[type=\"submit\"]');\n    submitBtn.disabled = false;\n    submitBtn.textContent = 'Create Event';\n  }\n\n  showMessage(message, type = 'success') {\n    const messageDiv = document.createElement('div');\n    messageDiv.className = `api-message ${type}`;\n    messageDiv.textContent = message;\n    \n    const form = this.toolbar.querySelector('#custom-event-form');\n    form.appendChild(messageDiv);\n    \n    setTimeout(() => {\n      messageDiv.remove();\n    }, 5000);\n  }\n\n  async callApi(data) {\n    try {\n      const response = await fetch('/someapimock', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      this.hideLoadingState();\n      this.showMessage('Event created successfully!', 'success');\n      this.toggleEventForm();\n      this.toolbar.querySelector('#custom-event-form').reset();\n      \n    } catch (error) {\n      this.hideLoadingState();\n      this.showMessage(`Error creating event: ${error.message}`, 'error');\n      console.error('API Error:', error);\n    }\n  }\n\n  clearValidationErrors() {\n    const form = this.toolbar.querySelector('#custom-event-form');\n    form.querySelectorAll('.error').forEach(field => {\n      field.classList.remove('error');\n    });\n  }\n\n  validateField(field) {\n    if (field.hasAttribute('required') && !field.value.trim()) {\n      field.classList.add('error');\n    } else {\n      field.classList.remove('error');\n    }\n  }\n\n  getCssSelector(el) {\n    let path = [], parent;\n    while (parent = el.parentNode) {\n        let tag = el.tagName, siblings;\n        path.unshift(\n            el.id ? `#${el.id}` : (\n                siblings = parent.children,\n                [].filter.call(siblings, (sibling) => sibling.tagName === tag).length === 1 ? tag.toLowerCase() :\n                `${tag.toLowerCase()}:nth-child(${1 + [].indexOf.call(siblings, el)})`\n            )\n        );\n        el = parent;\n    }\n    return `${path.join(' > ')}`.toLowerCase();\n  }\n  \n  show() {\n    if (!this.isVisible) {\n      this.toolbar.style.display = 'block';\n      setTimeout(() => {\n        this.toolbar.style.transform = 'translateX(-50%) translateY(0)';\n      }, 10);\n      this.isVisible = true;\n    }\n    return this;\n  }\n\n  hide() {\n    if (this.isVisible) {\n      const translateY = this.options.position === 'top' ? '-100%' : '100%';\n      this.toolbar.style.transform = `translateX(-50%) translateY(${translateY})`;\n      setTimeout(() => {\n        this.toolbar.style.display = 'none';\n      }, 300);\n      this.isVisible = false;\n    }\n    if (this.isInspecting) {\n        this.toggleInspector();\n    }\n    return this;\n  }\n\n  toggle() {\n    return this.isVisible ? this.hide() : this.show();\n  }\n\n  toggleCollapse() {\n    const formContainer = this.toolbar.querySelector('.custom-event-form-container');\n    const isCollapsed = formContainer.classList.contains('collapsed');\n    \n    if (isCollapsed) {\n      this.expandForm();\n    } else {\n      this.collapseForm();\n    }\n  }\n\n  collapseForm() {\n    const formContainer = this.toolbar.querySelector('.custom-event-form-container');\n    const collapseBtn = this.toolbar.querySelector('.inspector-toolbar-collapse');\n    \n    // Add collapsed class for smooth transition\n    formContainer.classList.add('collapsed');\n    \n    // Update icon to show expand (down arrow)\n    const icon = '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"6,9 12,15 18,9\"></polyline></svg>';\n    collapseBtn.innerHTML = icon;\n  }\n\n  expandForm() {\n    const formContainer = this.toolbar.querySelector('.custom-event-form-container');\n    const collapseBtn = this.toolbar.querySelector('.inspector-toolbar-collapse');\n    \n    // Add expanded class for smooth transition\n    formContainer.classList.remove('collapsed');\n    \n    // Update icon to show collapse (up arrow)\n    const icon = '<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"18,15 12,9 6,15\"></polyline></svg>';\n    collapseBtn.innerHTML = icon;\n  }\n\n  destroy() {\n    if (this.toolbar && this.toolbar.parentNode) {\n      this.toolbar.parentNode.removeChild(this.toolbar);\n    }\n    if (this.highlighter && this.highlighter.parentNode) {\n        this.highlighter.parentNode.removeChild(this.highlighter);\n    }\n    if (this.tooltip && this.tooltip.parentNode) {\n        this.tooltip.parentNode.removeChild(this.tooltip);\n    }\n    this.toolbar = null;\n    this.highlighter = null;\n    this.tooltip = null;\n    this.isVisible = false;\n    if (this.isInspecting) {\n        this.stopInspecting();\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InspectorToolbar);\n\nif (typeof window !== 'undefined') {\n  window.InspectorToolbar = InspectorToolbar;\n}\n\n\n//# sourceURL=webpack://InspectorToolbar/./src/index.js?\n}");

/***/ }),

/***/ "./src/styles.css":
/*!************************!*\
  !*** ./src/styles.css ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./styles.css */ \"./node_modules/css-loader/dist/cjs.js!./src/styles.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://InspectorToolbar/./src/styles.css?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	__webpack_exports__ = __webpack_exports__["default"];
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});