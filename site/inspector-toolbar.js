!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.InspectorToolbar=e():t.InspectorToolbar=e()}(this,()=>(()=>{"use strict";var t={56:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},72:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var i={},s=[],a=0;a<t.length;a++){var l=t[a],c=o.base?l[0]+o.base:l[0],p=i[c]||0,d="".concat(c," ").concat(p);i[c]=p+1;var u=n(d),h={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)e[u].references++,e[u].updater(h);else{var b=r(h,o);o.byIndex=a,e.splice(a,0,{identifier:d,updater:b,references:1})}s.push(d)}return s}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var i=o(t=t||[],r=r||{});return function(t){t=t||[];for(var s=0;s<i.length;s++){var a=n(i[s]);e[a].references--}for(var l=o(t,r),c=0;c<i.length;c++){var p=n(i[c]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}i=l}}},113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n}).join("")},e.i=function(t,n,o,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(o)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(s[l]=!0)}for(var c=0;c<t.length;c++){var p=[].concat(t[c]);o&&s[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),e.push(p))}},e}},365:(t,e,n)=>{n.d(e,{A:()=>a});var o=n(601),r=n.n(o),i=n(314),s=n.n(i)()(r());s.push([t.id,".input-with-icon {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.input-with-icon input {\n  padding-right: 32px; \n}\n\n.input-with-icon .icon-button {\n  position: absolute;\n  right: 4px;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n}\n\n.input-with-icon .icon-button:hover {\n  background: rgba(59, 130, 246, 0.1);\n  transform: translateY(-50%) scale(1.05);\n}\n\n.input-with-icon .icon-button.active {\n  background: rgba(59, 130, 246, 0.2);\n  color: #2563eb;\n  transform: translateY(-50%) scale(1.05);\n  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.3);\n}\n.inspector-toolbar {\n  width: 680px;\n  background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);\n  color: #1e293b;\n  border-radius: 10px;\n  padding: 8px 6px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  box-shadow: 0 16px 64px rgba(0, 0, 0, 0.15), 0 8px 32px rgba(37, 99, 235, 0.2), 0 1px 4px rgba(0, 0, 0, 0.1);\n  border: 1px solid #e2e8f0;\n}\n\n.inspector-toolbar-content {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 8px;\n  height: 40px;\n  min-height: 40px;\n}\n\n.inspector-toolbar-collapse {\n  background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);\n  border: none;\n  color: white;\n  font-size: 18px;\n  cursor: pointer;\n  padding: 0;\n  width: 28px;\n  height: 28px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 6px;\n  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  box-shadow: 0 2px 6px rgba(37, 99, 235, 0.3);\n  will-change: transform, box-shadow;\n}\n\n.inspector-toolbar-collapse svg {\n  transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  will-change: transform;\n}\n\n.inspector-toolbar-collapse:hover {\n  background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);\n  transform: translateY(-1px);\n  box-shadow: 0 3px 10px rgba(37, 99, 235, 0.4);\n}\n\n.toolbar-left, .toolbar-right {\n  display: flex;\n  align-items: center;\n}\n\n.toolbar-logo {\n  font-weight: 700;\n  margin-right: 12px;\n  background: linear-gradient(135deg, #3b82f6 0%, #1e40af 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  font-size: 15px;\n  letter-spacing: -0.3px;\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.toolbar-logo svg {\n  fill: none;\n  stroke: #3b82f6;\n  flex-shrink: 0;\n}\n\n.toolbar-divider {\n  width: 1px;\n  height: 18px;\n  background: linear-gradient(to bottom, transparent 0%, #cbd5e1 20%, #64748b 50%, #cbd5e1 80%, transparent 100%);\n  margin: 0 10px;\n  flex-shrink: 0;\n}\n\n.toolbar-actions {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  flex: 1;\n  min-width: 0;\n}\n\n.toolbar-button {\n  background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);\n  border: 1px solid #cbd5e1;\n  color: #475569;\n  padding: 6px 12px;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.25s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  font-weight: 500;\n  font-size: 12px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  height: 28px;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  gap: 6px;\n  will-change: transform, box-shadow;\n}\n\n.toolbar-button svg {\n  flex-shrink: 0;\n  transition: all 0.25s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n\n.toolbar-button:hover {\n  background: linear-gradient(135deg, #e2e8f0 0%, #cbd5e1 100%);\n  border-color: #94a3b8;\n  transform: translateY(-1px);\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\n}\n\n.toolbar-button.active,\n.create-event-button {\n  background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%) !important;\n  color: white !important;\n  border-color: #1d4ed8 !important;\n  box-shadow: 0 3px 8px rgba(37, 99, 235, 0.3) !important;\n}\n\n.create-event-button:hover {\n  background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%) !important;\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(37, 99, 235, 0.4) !important;\n}\n\n.create-event-button svg {\n  stroke: white !important;\n}\n\n.toolbar-left {\n    flex-grow: 1;\n}\n\n.toolbar-right {\n  gap: 8px;\n}\n\n.hide-toolbar-button {\n  background: transparent !important;\n  border: 1px solid transparent !important;\n  box-shadow: none !important;\n  padding: 6px !important;\n  width: 28px !important;\n  height: 28px !important;\n}\n\n.hide-toolbar-button svg {\n  stroke: #94a3b8 !important;\n}\n\n.hide-toolbar-button:hover {\n  background: rgba(239, 68, 68, 0.1) !important;\n  border-color: rgba(239, 68, 68, 0.3) !important;\n  transform: none !important;\n  box-shadow: none !important;\n}\n\n.hide-toolbar-button:hover svg {\n  stroke: #ef4444 !important;\n}\n\n/* RTL Support */\n[dir=\"rtl\"] .toolbar-right {\n  flex-direction: row-reverse;\n}\n\n[dir=\"rtl\"] .toolbar-left {\n  flex-direction: row-reverse;\n}\n\n[dir=\"rtl\"] .toolbar-logo {\n  margin-left: 12px;\n  margin-right: 0;\n}\n\n[dir=\"rtl\"] .toolbar-divider {\n  margin: 0 10px;\n}\n\n\n\n.inspector-highlighter {\n    position: absolute;\n    background-color: rgba(59, 130, 246, 0.15);\n    border: 2px solid #3b82f6;\n    border-radius: 4px;\n    z-index: 9998;\n    display: none;\n    pointer-events: none;\n    box-shadow: 0 0 20px rgba(59, 130, 246, 0.3), inset 0 0 20px rgba(59, 130, 246, 0.1);\n}\n\n.inspector-tooltip {\n    position: absolute;\n    background: linear-gradient(135deg, #1e293b 0%, #334155 100%);\n    color: white;\n    padding: 6px 10px;\n    border-radius: 6px;\n    border: 1px solid #475569;\n    z-index: 9999;\n    display: none;\n    font-size: 10px;\n    pointer-events: none;\n    font-family: 'SF Mono', 'Monaco', 'Cascadia Code', 'Roboto Mono', monospace;\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(8px);\n}\n\n.custom-event-form-container {\n  background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);\n  padding: 20px;\n  border-top: 1px solid #cbd5e1;\n  border-radius: 0 0 10px 10px;\n  transition: max-height 0.3s ease-in-out, padding 0.3s ease-in-out, opacity 0.3s ease-in-out;\n  overflow: visible;\n  max-height: 80vh;\n  opacity: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.custom-event-form-container.collapsed {\n  max-height: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  opacity: 0;\n  border-top-width: 0;\n  overflow: hidden;\n}\n\n/* Stepper UI Styles */\n.stepper-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  min-height: 450px;\n  max-height: calc(80vh - 40px);\n}\n\n.stepper-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 0 16px;\n  border-bottom: 1px solid #cbd5e1;\n  margin-bottom: 20px;\n}\n\n.stepper-title {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.stepper-controls {\n  display: flex;\n  align-items: center;\n}\n\n.stepper-collapse-btn {\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #64748b;\n}\n\n.stepper-progress {\n  display: flex;\n  align-items: center;\n  margin-bottom: 24px;\n  justify-content: center;\n}\n\n.stepper-step {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  cursor: pointer;\n}\n\n.step-number {\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: #e2e8f0;\n  color: #64748b;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 14px;\n  margin-bottom: 8px;\n  transition: all 0.3s ease;\n}\n\n.step-label {\n  font-size: 14px;\n  color: #64748b;\n  font-weight: 500;\n  white-space: nowrap;\n  transition: color 0.3s ease;\n}\n\n.stepper-connector {\n  flex: 1;\n  height: 2px;\n  background: #e2e8f0;\n  margin: 0 8px;\n  position: relative;\n  top: -10px;\n}\n\n.stepper-step.active .step-number {\n  background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);\n  color: white;\n  box-shadow: 0 2px 8px rgba(37, 99, 235, 0.3);\n}\n\n.stepper-step.active .step-label {\n  color: #1e293b;\n  font-weight: 600;\n}\n\n.stepper-step.completed .step-number {\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n  color: white;\n  box-shadow: 0 2px 8px rgba(16, 185, 129, 0.3);\n}\n\n.step-number.has-checkmark {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.stepper-step.completed .step-number {\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n  color: white;\n}\n\n.stepper-content {\n  position: relative;\n  overflow-y: auto;\n  overflow-x: hidden;\n  max-height: calc(60vh - 200px);\n  margin-bottom: 0;\n  padding-right: 8px;\n  flex: 1;\n  min-height: 200px;\n}\n\n/* Custom scrollbar styling for stepper content */\n.stepper-content::-webkit-scrollbar {\n  width: 6px;\n}\n\n.stepper-content::-webkit-scrollbar-track {\n  background: rgba(148, 163, 184, 0.1);\n  border-radius: 3px;\n}\n\n.stepper-content::-webkit-scrollbar-thumb {\n  background: linear-gradient(135deg, #94a3b8 0%, #64748b 100%);\n  border-radius: 3px;\n  transition: background 0.2s ease;\n}\n\n.stepper-content::-webkit-scrollbar-thumb:hover {\n  background: linear-gradient(135deg, #64748b 0%, #475569 100%);\n}\n\n/* Firefox scrollbar styling */\n.stepper-content {\n  scrollbar-width: thin;\n  scrollbar-color: #94a3b8 rgba(148, 163, 184, 0.1);\n}\n\n.step-content {\n  display: none;\n  opacity: 0;\n  transform: translateX(20px);\n  transition: all 0.3s ease;\n}\n\n.step-content.active {\n  display: block;\n  opacity: 1;\n  transform: translateX(0);\n}\n\n.form-group-row {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n}\n\n.form-group-row label {\n  font-size: 14px;\n  font-weight: 500;\n  color: #475569;\n  margin-bottom: 6px;\n}\n\n.type-selector {\n  display: flex;\n  background: #fff;\n  border-radius: 8px;\n  padding: 2px;\n  width: 100%;\n  border: 1px solid #cbd5e1;\n  margin-bottom: 8px;\n}\n\n.type-option {\n  flex: 1;\n  padding: 10px;\n  text-align: center;\n  font-weight: 500;\n  border-radius: 6px;\n  cursor: pointer;\n  background: transparent;\n  border: none;\n  transition: all 0.2s ease;\n  color: #64748b;\n}\n\n.type-option.active {\n  background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);\n  color: white;\n  box-shadow: 0 2px 6px rgba(37, 99, 235, 0.2);\n}\n\n#custom-event-form input,\n#custom-event-form select {\n  padding: 10px 12px;\n  border-radius: 8px;\n  border: 1px solid #94a3b8;\n  background: #ffffff;\n  color: #1e293b;\n  width: 100%;\n  box-sizing: border-box;\n  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  font-size: 14px;\n  font-weight: 400;\n  height: 40px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  will-change: border-color, box-shadow;\n}\n\n#custom-event-form input:focus,\n#custom-event-form select:focus {\n  outline: none;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1), 0 1px 3px rgba(0, 0, 0, 0.1);\n  background: #ffffff;\n}\n\n#custom-event-form input.error,\n#custom-event-form select.error {\n  border-color: #ef4444;\n  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);\n  background: linear-gradient(135deg, #fef2f2 0%, #ffffff 100%);\n}\n\n.required-badge {\n  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n  color: white;\n  font-size: 9px;\n  padding: 2px 5px;\n  border-radius: 4px;\n  margin-left: 4px;\n  font-weight: 500;\n  box-shadow: 0 1px 2px rgba(239, 68, 68, 0.3);\n}\n\n#paths-container,\n#attributions-container,\n#selectors-container,\n#attributes-container {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.selector-block,\n.attribute-block {\n  background: rgba(248, 250, 252, 0.8);\n  border-radius: 12px;\n  padding: 20px;\n  position: relative;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  border: 1px solid #e2e8f0;\n}\n\n.selector-header,\n.attribute-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.selector-title,\n.attribute-title {\n  font-size: 16px;\n  font-weight: 600;\n  color: #1e293b;\n  margin: 0;\n}\n\n.remove-selector-btn,\n.remove-attribute-btn {\n  width: 36px;\n  height: 36px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  background: transparent;\n  color: #64748b;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.remove-selector-btn:hover,\n.remove-attribute-btn:hover {\n  background-color: rgba(239, 68, 68, 0.1);\n  color: #ef4444;\n}\n\n.attribute-fields {\n  display: flex;\n  gap: 12px;\n}\n\n.attribute-name-field {\n  width: 35%;\n  min-width: 150px;\n}\n\n.attribute-value-field {\n  flex: 1;\n}\n\n.attribute-name-select {\n  width: 100%;\n  height: 40px;\n  padding: 10px 12px;\n  border-radius: 8px;\n  border: 1px solid #94a3b8;\n  background: #ffffff;\n  color: #1e293b;\n  font-size: 14px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n.page-pattern-container {\n  display: flex;\n  gap: 12px;\n}\n\n.pattern-operator {\n  width: 35%;\n  min-width: 120px;\n}\n\n.pattern-value {\n  flex: 1;\n}\n\n.form-section-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 8px;\n}\n\n.form-section-label {\n  font-size: 14px;\n  font-weight: 600;\n  color: #1e293b;\n}\n\n.form-section-header #add-path-btn,\n.form-section-header #add-attribute-btn,\n.add-selector-btn,\n.add-attribute-btn {\n  padding: 6px 10px;\n  font-size: 12px;\n  height: 28px;\n  min-width: auto;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.add-selector-btn,\n.add-attribute-btn {\n  background: #f8fafc;\n  border: 1px dashed #94a3b8;\n  color: #64748b;\n  border-radius: 8px;\n  padding: 12px;\n  width: 100%;\n  justify-content: center;\n  font-size: 14px;\n  font-weight: 500;\n  margin: 8px 0;\n  transition: all 0.2s ease;\n  cursor: pointer;\n  height: auto;\n}\n\n.add-selector-btn:hover,\n.add-attribute-btn:hover {\n  background: #f1f5f9;\n  border-color: #64748b;\n  color: #475569;\n}\n\n.form-section-header #add-path-btn svg,\n.form-section-header #add-attribute-btn svg {\n  flex-shrink: 0;\n}\n\n#paths-container .path-item {\n  display: grid;\n  grid-template-columns: 1fr 1fr auto;\n  gap: 8px;\n  align-items: center;\n}\n\n#attributions-container .attribute-item {\n  display: grid;\n  grid-template-columns: 1fr 2fr auto;\n  gap: 8px;\n  align-items: center;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  margin-top: 20px;\n  padding: 20px 0 12px 0;\n  border-top: 1px solid #e2e8f0;\n  background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);\n  border-radius: 0 0 10px 10px;\n  margin-left: -20px;\n  margin-right: -20px;\n  padding-left: 20px;\n  padding-right: 20px;\n  flex-shrink: 0;\n}\n\n#add-path-btn,\n#add-attribute-btn,\n.remove-path-btn,\n.remove-attribute-btn,\n#next-step-btn {\n  padding: 8px 16px;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.25s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  border: 1px solid transparent;\n  font-weight: 500;\n  font-size: 14px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  will-change: transform, box-shadow;\n}\n\n.remove-path-btn,\n.remove-attribute-btn {\n  padding: 6px;\n  width: 36px;\n  height: 36px;\n  gap: 0;\n}\n\n.remove-path-btn svg,\n.remove-attribute-btn svg {\n  flex-shrink: 0;\n}\n\n#add-path-btn,\n#add-attribute-btn {\n  background: linear-gradient(135deg, #64748b 0%, #475569 100%);\n  color: white;\n  border-color: #334155;\n  box-shadow: 0 2px 4px rgba(100, 116, 139, 0.3);\n}\n\n#add-path-btn:hover,\n#add-attribute-btn:hover {\n  background: linear-gradient(135deg, #475569 0%, #334155 100%);\n  transform: translateY(-1px);\n  box-shadow: 0 3px 8px rgba(100, 116, 139, 0.4);\n}\n\n.remove-path-btn,\n.remove-attribute-btn {\n  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n  color: white;\n  border-color: #b91c1c;\n  box-shadow: 0 2px 4px rgba(239, 68, 68, 0.3);\n}\n\n.remove-path-btn:hover,\n.remove-attribute-btn:hover {\n  background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%);\n  transform: translateY(-1px);\n  box-shadow: 0 3px 8px rgba(239, 68, 68, 0.4);\n}\n\n[name=\"cssSelector\"] {\n  background: #ffffff !important;\n  border-color: #94a3b8 !important;\n  color: #1e293b !important;\n  font-family: 'SF Mono', 'Monaco', 'Cascadia Code', 'Roboto Mono', monospace !important;\n  font-size: 12px !important;\n}\n\n#next-step-btn {\n  background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);\n  color: white;\n  border-color: #1d4ed8;\n  font-weight: 600;\n  box-shadow: 0 3px 8px rgba(37, 99, 235, 0.3);\n  min-width: 120px;\n  position: relative;\n  overflow: hidden;\n}\n\n#next-step-btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);\n  transition: left 0.6s ease;\n}\n\n#next-step-btn:hover::before {\n  left: 100%;\n}\n\n#next-step-btn:hover {\n  background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(37, 99, 235, 0.4);\n}\n\n#next-step-btn svg {\n  margin-left: 6px;\n  transition: transform 0.2s ease;\n  flex-shrink: 0;\n}\n\n#next-step-btn:hover svg {\n  transform: translateX(2px);\n}\n\n#prev-step-btn,\n#cancel-btn {\n  padding: 8px 16px;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  background: #fff;\n  border: 1px solid #cbd5e1;\n  color: #475569;\n  height: 40px;\n  transition: all 0.25s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  min-width: 120px;\n}\n\n#prev-step-btn:hover,\n#cancel-btn:hover {\n  background: #f1f5f9;\n  border-color: #94a3b8;\n  transform: translateY(-1px);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n#prev-step-btn svg {\n  margin-right: 2px;\n  transition: transform 0.2s ease;\n  flex-shrink: 0;\n}\n\n#prev-step-btn:hover svg {\n  transform: translateX(-2px);\n}\n\n#prev-step-btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n  background: #f8fafc;\n  transform: none;\n  box-shadow: none;\n}\n\n#prev-step-btn:disabled svg {\n  transform: none;\n}\n\n.api-message {\n  padding: 12px 16px;\n  border-radius: 8px;\n  margin-top: 16px;\n  font-weight: 500;\n  animation: slideIn 0.3s ease;\n  font-size: 14px;\n}\n\n.api-message.success {\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n  color: white;\n  border: 1px solid #047857;\n  box-shadow: 0 2px 8px rgba(16, 185, 129, 0.3);\n}\n\n.api-message.error {\n  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n  color: white;\n  border: 1px solid #b91c1c;\n  box-shadow: 0 2px 8px rgba(239, 68, 68, 0.3);\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}",""]);const a=s},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},601:t=>{t.exports=function(t){return t[1]}},659:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return t[o](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0;var o={};n.d(o,{default:()=>f});var r=n(72),i=n.n(r),s=n(825),a=n.n(s),l=n(659),c=n.n(l),p=n(56),d=n.n(p),u=n(540),h=n.n(u),b=n(113),g=n.n(b),v=n(365),x={};x.styleTagTransform=g(),x.setAttributes=d(),x.insert=c().bind(null,"head"),x.domAPI=a(),x.insertStyleElement=h(),i()(v.A,x),v.A&&v.A.locals&&v.A.locals;class m{constructor(t={}){this.options={...t},this.toolbar=null,this.isVisible=!1,this.isInspecting=!1,this.highlighter=null,this.tooltip=null,this.currentStep=1,this.totalSteps=3,this.selectorCount=1,this.attributeCount=1,this.completedSteps=[]}init(){return this.createToolbar(),this.attachToPage(),this.createInspectorElements(),this}createToolbar(){this.toolbar=document.createElement("div"),this.toolbar.className="inspector-toolbar",this.toolbar.innerHTML='\n      <div class="inspector-toolbar-content">\n        <div class="toolbar-left">\n          <div class="toolbar-logo">\n            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n              <circle cx="11" cy="11" r="8"></circle>\n              <path d="m21 21-4.35-4.35"></path>\n            </svg>\n            WebAnalytics Inspector\n          </div>\n          <div class="toolbar-divider"></div>\n          <div class="toolbar-actions">\n            <button class="toolbar-button create-event-button" id="create-event-btn">\n              <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                <line x1="12" y1="5" x2="12" y2="19"></line>\n                <line x1="5" y1="12" x2="19" y2="12"></line>\n              </svg>\n              Create Event\n            </button>\n          </div>\n        </div>\n        <div class="toolbar-right">\n          <button class="toolbar-button hide-toolbar-button" id="hide-toolbar-btn" title="Hide Toolbar">\n            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n              <path d="M18 6 6 18"></path>\n              <path d="m6 6 12 12"></path>\n            </svg>\n          </button>\n          <button class="inspector-toolbar-collapse">\n            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n              <polyline points="6,9 12,15 18,9"></polyline>\n            </svg>\n          </button>\n        </div>\n      </div>\n      <div class="custom-event-form-container collapsed">\n        <form id="custom-event-form">\n          <div class="stepper-container">\n            <div class="stepper-header">\n              <div class="stepper-title">Event Builder</div>\n              <div class="stepper-controls">\n                <button type="button" class="stepper-collapse-btn">\n                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                    <polyline points="18,15 12,9 6,15"></polyline>\n                  </svg>\n                </button>\n              </div>\n            </div>\n            \n            <div class="stepper-progress">\n              <div class="stepper-step active" data-step="1">\n                <div class="step-number">1</div>\n                <div class="step-label">Event Info</div>\n              </div>\n              <div class="stepper-connector"></div>\n              <div class="stepper-step" data-step="2">\n                <div class="step-number">2</div>\n                <div class="step-label">Selectors</div>\n              </div>\n              <div class="stepper-connector"></div>\n              <div class="stepper-step" data-step="3">\n                <div class="step-number">3</div>\n                <div class="step-label">Attributes</div>\n              </div>\n            </div>\n\n            <div class="stepper-content">\n              \x3c!-- Step 1: Event Info --\x3e\n              <div class="step-content active" data-step="1">\n                <div class="form-group-row">\n                  <label>Type</label>\n                  <div class="type-selector">\n                    <button type="button" class="type-option active" data-type="key">Key</button>\n                    <button type="button" class="type-option" data-type="general">General</button>\n                  </div>\n                </div>\n                \n                <div class="form-group-row">\n                  <label for="event-name">Name</label>\n                  <input type="text" id="event-name" name="eventName" placeholder="Add to cart" required>\n                </div>\n                \n                <div class="form-group-row">\n                  <label for="event-category">Event Category</label>\n                  <select id="event-category" name="category" required>\n                    <option value="e-commerce">E-Commerce</option>\n                    <option value="engagement">Engagement</option>\n                    <option value="analytics">Analytics</option>\n                  </select>\n                </div>\n                \n                <div class="form-group-row">\n                  <label for="event-type">Event</label>\n                  <select id="event-type" name="eventType" required>\n                    <option value="DA_ADD_ITEM_TO_CART">DA_ADD_ITEM_TO_CART</option>\n                    <option value="click">Click</option>\n                    <option value="scroll">Scroll</option>\n                    <option value="submit">Submit</option>\n                  </select>\n                </div>\n                \n                <div class="form-group-row">\n                  <label for="event-trigger">Event Trigger</label>\n                  <select id="event-trigger" name="eventTrigger" required>\n                    <option value="click">Click</option>\n                    <option value="scroll">Scroll</option>\n                    <option value="hover">Hover</option>\n                  </select>\n                </div>\n                \n                <div class="form-group-row">\n                  <label for="count-type">Count Type</label>\n                  <select id="count-type" name="countType" required>\n                    <option value="per_event">Per event</option>\n                    <option value="once">Once</option>\n                    <option value="every_time">Every Time</option>\n                  </select>\n                </div>\n              </div>\n              \n              \x3c!-- Step 2: Selectors --\x3e\n              <div class="step-content" data-step="2">\n                <div id="selectors-container">\n                  \x3c!-- Selector 1 --\x3e\n                  <div class="selector-block" data-selector-id="1">\n                    <div class="selector-header">\n                      <h3 class="selector-title">Selector 1</h3>\n                      <button type="button" class="remove-selector-btn" title="Remove Selector">\n                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                          <polyline points="3 6 5 6 21 6"></polyline>\n                          <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>\n                        </svg>\n                      </button>\n                    </div>\n                    \n                    <div class="form-group-row">\n                      <label>Element Selector</label>\n                      <div class="input-with-icon">\n                        <input type="text" name="elementSelector[]" placeholder="#add_to_cart" required>\n                        <button type="button" class="selector-inspect-btn toolbar-button icon-button" title="Inspect Element">\n                          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-crosshair"><circle cx="12" cy="12" r="10"></circle><line x1="22" y1="12" x2="18" y2="12"></line><line x1="6" y1="12" x2="2" y2="12"></line><line x1="12" y1="6" x2="12" y2="2"></line><line x1="12" y1="22" x2="12" y2="18"></line></svg>\n                        </button>\n                      </div>\n                    </div>\n                    \n                    <div class="form-group-row">\n                      <label>Page Pattern (Optional)</label>\n                      <div class="page-pattern-container">\n                        <div class="pattern-operator">\n                          <select name="patternOperator[]" class="pattern-operator-select">\n                            <option value="equals">Equals</option>\n                            <option value="contains">Contains</option>\n                            <option value="startsWith">Starts with</option>\n                            <option value="endsWith">Ends with</option>\n                            <option value="regex">Regex</option>\n                          </select>\n                        </div>\n                        <input type="text" name="patternValue[]" class="pattern-value" placeholder="Value">\n                      </div>\n                    </div>\n                  </div>\n                  \n                  \x3c!-- Add Selector Button --\x3e\n                  <button type="button" id="add-selector-btn" class="add-selector-btn">\n                    <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                      <line x1="12" y1="5" x2="12" y2="19"></line>\n                      <line x1="5" y1="12" x2="19" y2="12"></line>\n                    </svg>\n                    Add Another Selector\n                  </button>\n                </div>\n              </div>\n              \n              \x3c!-- Step 3: Attributes --\x3e\n              <div class="step-content" data-step="3">\n                <div id="attributes-container">\n                  \x3c!-- Attribute 1 --\x3e\n                  <div class="attribute-block" data-attribute-id="1">\n                    <div class="attribute-header">\n                      <h3 class="attribute-title">Attribute 1 (Optional)</h3>\n                      <button type="button" class="remove-attribute-btn" title="Remove Attribute">\n                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                          <polyline points="3 6 5 6 21 6"></polyline>\n                          <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>\n                        </svg>\n                      </button>\n                    </div>\n                    \n                    <div class="attribute-fields">\n                      <div class="attribute-name-field">\n                        <select name="attributeName[]" class="attribute-name-select">\n                          <option value="">Select Name</option>\n                          <option value="id">ID</option>\n                          <option value="class">Class</option>\n                          <option value="data-value">Data Value</option>\n                          <option value="text">Text Content</option>\n                          <option value="href">Link (href)</option>\n                          <option value="src">Image Source</option>\n                          <option value="alt">Alt Text</option>\n                          <option value="title">Title</option>\n                          <option value="custom">Custom</option>\n                        </select>\n                      </div>\n                      \n                      <div class="attribute-value-field">\n                        <div class="input-with-icon">\n                          <input type="text" name="attributeValue[]" placeholder="Like &#34;#sale.price&#34;">\n                          <button type="button" class="inspect-attribute-btn toolbar-button icon-button" title="Inspect Element">\n                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-crosshair"><circle cx="12" cy="12" r="10"></circle><line x1="22" y1="12" x2="18" y2="12"></line><line x1="6" y1="12" x2="2" y2="12"></line><line x1="12" y1="6" x2="12" y2="2"></line><line x1="12" y1="22" x2="12" y2="18"></line></svg>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  \x3c!-- Add Attribute Button --\x3e\n                  <button type="button" id="add-attribute-btn" class="add-attribute-btn">\n                    <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                      <line x1="12" y1="5" x2="12" y2="19"></line>\n                      <line x1="5" y1="12" x2="19" y2="12"></line>\n                    </svg>\n                    Add New\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <div class="form-actions">\n              <button type="button" id="cancel-btn" class="secondary-btn">Cancel</button>\n              <button type="button" id="prev-step-btn" class="secondary-btn" disabled>\n                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                  <polyline points="15 18 9 12 15 6"></polyline>\n                </svg>\n                Previous\n              </button>\n              <button type="button" id="next-step-btn">\n                Next\n                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                  <polyline points="9 18 15 12 9 6"></polyline>\n                </svg>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    ',this.applyStyles(),this.bindEvents()}createInspectorElements(){this.highlighter=document.createElement("div"),this.highlighter.className="inspector-highlighter",document.body.appendChild(this.highlighter),this.tooltip=document.createElement("div"),this.tooltip.className="inspector-tooltip",document.body.appendChild(this.tooltip)}applyStyles(){const t="top"===this.options.position?"-100%":"100%";Object.assign(this.toolbar.style,{position:"fixed",bottom:"bottom"===this.options.position?"32px":"60px",left:"50%",height:this.options.height,backgroundColor:this.options.backgroundColor,color:this.options.textColor,zIndex:"9999",transform:`translateX(-50%) translateY(${t})`,transition:"transform 0.3s ease"})}bindEvents(){this.toolbar.querySelector(".inspector-toolbar-collapse").addEventListener("click",()=>this.toggleCollapse()),this.toolbar.querySelector("#hide-toolbar-btn").addEventListener("click",()=>this.hide()),this.toolbar.querySelector("#create-event-btn").addEventListener("click",()=>this.toggleEventForm());const t=this.toolbar.querySelector("#add-path-btn");t&&t.addEventListener("click",()=>this.addPathInput()),this.toolbar.querySelector("#add-attribute-btn").addEventListener("click",()=>this.addAttribute()),this.toolbar.querySelector("#add-selector-btn").addEventListener("click",()=>this.addSelector());const e=this.toolbar.querySelector("#next-step-btn"),n=this.toolbar.querySelector("#prev-step-btn"),o=this.toolbar.querySelector("#cancel-btn");e.addEventListener("click",()=>this.nextStep()),n.addEventListener("click",()=>this.prevStep()),o.addEventListener("click",()=>this.closeEventForm());const r=this.toolbar.querySelectorAll(".type-option");r.forEach(t=>{t.addEventListener("click",()=>{r.forEach(t=>t.classList.remove("active")),t.classList.add("active")})});const i=this.toolbar.querySelector("#custom-event-form");i.addEventListener("submit",t=>this.handleFormSubmit(t)),i.addEventListener("input",t=>{t.target.hasAttribute("required")&&this.validateField(t.target)}),i.addEventListener("blur",t=>{t.target.hasAttribute("required")&&this.validateField(t.target)}),this.toolbar.addEventListener("click",t=>{if(t.target.classList.contains("remove-path-btn")&&this.removePathInput(t.target),t.target.closest(".remove-attribute-btn")&&this.removeAttribute(t.target.closest(".attribute-block")),t.target.closest(".inspect-attribute-btn")&&(this.activeAttributeValueInput=t.target.closest(".input-with-icon").querySelector("input"),this.toggleInspector()),t.target.closest(".selector-inspect-btn")){const e=t.target.closest(".input-with-icon").querySelector('input[name="elementSelector[]"]');this.activeAttributeValueInput=e,this.toggleInspector()}if(t.target.closest(".remove-selector-btn")&&this.removeSelector(t.target.closest(".selector-block")),t.target.closest(".stepper-step")){const e=t.target.closest(".stepper-step"),n=parseInt(e.dataset.step);!e.classList.contains("active")&&this.isStepAccessible(n)&&this.goToStep(n)}}),this.boundHandleMouseOver=this.handleMouseOver.bind(this),this.boundHandleMouseOut=this.handleMouseOut.bind(this),this.boundHandleClick=this.handleClick.bind(this)}attachToPage(){document.body.appendChild(this.toolbar)}toggleInspector(){this.isInspecting=!this.isInspecting,this.isInspecting?(this.startInspecting(),this.collapseForm()):this.stopInspecting()}startInspecting(){document.body.style.cursor="crosshair",this.toolbar.querySelectorAll(".selector-inspect-btn, .inspect-attribute-btn").forEach(t=>t.classList.add("active")),document.addEventListener("mouseover",this.boundHandleMouseOver),document.addEventListener("mouseout",this.boundHandleMouseOut),document.addEventListener("click",this.boundHandleClick,!0)}stopInspecting(){document.body.style.cursor="default",this.toolbar.querySelectorAll(".selector-inspect-btn, .inspect-attribute-btn").forEach(t=>t.classList.remove("active")),this.highlighter.style.display="none",this.tooltip.style.display="none",document.removeEventListener("mouseover",this.boundHandleMouseOver),document.removeEventListener("mouseout",this.boundHandleMouseOut),document.removeEventListener("click",this.boundHandleClick,!0)}handleMouseOver(t){if(!this.isInspecting)return;const e=t.target;if(e===this.toolbar||this.toolbar.contains(e)||e===this.highlighter||e===this.tooltip)return this.highlighter.style.display="none",void(this.tooltip.style.display="none");const n=e.getBoundingClientRect();this.highlighter.style.display="block",this.highlighter.style.top=`${n.top+window.scrollY}px`,this.highlighter.style.left=`${n.left+window.scrollX}px`,this.highlighter.style.width=`${n.width}px`,this.highlighter.style.height=`${n.height}px`;const o=this.getCssSelector(e);this.tooltip.style.display="block",this.tooltip.style.top=n.top+window.scrollY-30+"px",this.tooltip.style.left=`${n.left+window.scrollX}px`,this.tooltip.textContent=o}handleMouseOut(){this.isInspecting&&(this.highlighter.style.display="none",this.tooltip.style.display="none")}handleClick(t){if(!this.isInspecting)return;const e=t.target;if(e===this.toolbar||this.toolbar.contains(e))return;t.preventDefault(),t.stopPropagation();const n=this.getCssSelector(e);this.activeAttributeValueInput?(this.activeAttributeValueInput.value=n,this.activeAttributeValueInput=null):this.toolbar.querySelector("#css-selector").value=n,this.toggleInspector(),this.expandForm()}toggleEventForm(){const t=this.toolbar.querySelector(".custom-event-form-container"),e=this.toolbar.querySelector("#create-event-btn"),n=!t.classList.contains("collapsed");n?this.collapseForm():(this.expandForm(),this.goToStep(1)),e.classList.toggle("active",!n)}addPathInput(){const t=this.toolbar.querySelector("#paths-container"),e=document.createElement("div");e.className="path-item",e.innerHTML='\n      <input type="text" name="pathType[]" placeholder="Type" class="path-type" required>\n      <input type="text" name="pathValue[]" placeholder="Value" class="path-value" required>\n      <button type="button" class="remove-path-btn">\n        <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n          <line x1="18" y1="6" x2="6" y2="18"></line>\n          <line x1="6" y1="6" x2="18" y2="18"></line>\n        </svg>\n      </button>\n    ',t.appendChild(e)}removePathInput(t){t.parentElement.remove()}addAttribute(){this.attributeCount++;const t=this.toolbar.querySelector("#attributes-container"),e=this.toolbar.querySelector("#add-attribute-btn"),n=document.createElement("div");n.className="attribute-block",n.dataset.attributeId=this.attributeCount,n.innerHTML=`\n      <div class="attribute-header">\n        <h3 class="attribute-title">Attribute ${this.attributeCount} (Optional)</h3>\n        <button type="button" class="remove-attribute-btn" title="Remove Attribute">\n          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n            <polyline points="3 6 5 6 21 6"></polyline>\n            <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>\n          </svg>\n        </button>\n      </div>\n      \n      <div class="attribute-fields">\n        <div class="attribute-name-field">\n          <select name="attributeName[]" class="attribute-name-select">\n            <option value="">Select Name</option>\n            <option value="id">ID</option>\n            <option value="class">Class</option>\n            <option value="data-value">Data Value</option>\n            <option value="text">Text Content</option>\n            <option value="href">Link (href)</option>\n            <option value="src">Image Source</option>\n            <option value="alt">Alt Text</option>\n            <option value="title">Title</option>\n            <option value="custom">Custom</option>\n          </select>\n        </div>\n        \n        <div class="attribute-value-field">\n          <div class="input-with-icon">\n            <input type="text" name="attributeValue[]" placeholder="Like &#34;#sale.price&#34;">\n            <button type="button" class="inspect-attribute-btn toolbar-button icon-button" title="Inspect Element">\n              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-crosshair"><circle cx="12" cy="12" r="10"></circle><line x1="22" y1="12" x2="18" y2="12"></line><line x1="6" y1="12" x2="2" y2="12"></line><line x1="12" y1="6" x2="12" y2="2"></line><line x1="12" y1="22" x2="12" y2="18"></line></svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    `,t.insertBefore(n,e)}removeAttribute(t){if(this.toolbar.querySelectorAll(".attribute-block").length<=1)return;t.remove();const e=this.toolbar.querySelectorAll(".attribute-block");e.forEach((t,e)=>{t.querySelector(".attribute-title").textContent=`Attribute ${e+1} (Optional)`,t.dataset.attributeId=e+1}),this.attributeCount=e.length}markStepCompleted(t){this.completedSteps.includes(t)||this.completedSteps.push(t);const e=this.toolbar.querySelectorAll(".stepper-step")[t-1];if(e){e.classList.add("completed");const t=e.querySelector(".step-number");t&&!t.classList.contains("has-checkmark")&&(t.classList.add("has-checkmark"),t.innerHTML='\n          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round">\n            <polyline points="20 6 9 17 4 12"></polyline>\n          </svg>\n        ')}}isStepAccessible(t){return 1===t||this.completedSteps.includes(t-1)||this.currentStep>=t}addSelector(){this.selectorCount++;const t=this.toolbar.querySelector("#selectors-container"),e=this.toolbar.querySelector("#add-selector-btn"),n=document.createElement("div");n.className="selector-block",n.dataset.selectorId=this.selectorCount,n.innerHTML=`\n      <div class="selector-header">\n        <h3 class="selector-title">Selector ${this.selectorCount}</h3>\n        <button type="button" class="remove-selector-btn" title="Remove Selector">\n          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n            <polyline points="3 6 5 6 21 6"></polyline>\n            <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>\n          </svg>\n        </button>\n      </div>\n      \n      <div class="form-group-row">\n        <label>Element Selector</label>\n        <div class="input-with-icon">\n          <input type="text" name="elementSelector[]" placeholder="Like &#34;#sale.addtocart&#34;" required>\n          <button type="button" class="selector-inspect-btn toolbar-button icon-button" title="Inspect Element">\n            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-crosshair"><circle cx="12" cy="12" r="10"></circle><line x1="22" y1="12" x2="18" y2="12"></line><line x1="6" y1="12" x2="2" y2="12"></line><line x1="12" y1="6" x2="12" y2="2"></line><line x1="12" y1="22" x2="12" y2="18"></line></svg>\n          </button>\n        </div>\n      </div>\n      \n      <div class="form-group-row">\n        <label>Page Pattern (Optional)</label>\n        <div class="page-pattern-container">\n          <div class="pattern-operator">\n            <select name="patternOperator[]" class="pattern-operator-select">\n              <option value="equals">Equals</option>\n              <option value="contains">Contains</option>\n              <option value="startsWith">Starts with</option>\n              <option value="endsWith">Ends with</option>\n              <option value="regex">Regex</option>\n            </select>\n          </div>\n          <input type="text" name="patternValue[]" class="pattern-value" placeholder="Value">\n        </div>\n      </div>\n    `,t.insertBefore(n,e)}removeSelector(t){if(this.toolbar.querySelectorAll(".selector-block").length<=1)return;t.remove();const e=this.toolbar.querySelectorAll(".selector-block");e.forEach((t,e)=>{t.querySelector(".selector-title").textContent=`Selector ${e+1}`,t.dataset.selectorId=e+1}),this.selectorCount=e.length}nextStep(){if(this.currentStep<this.totalSteps){if(!this.validateStep(this.currentStep))return;this.markStepCompleted(this.currentStep),this.goToStep(this.currentStep+1)}else this.handleFormSubmit(new Event("submit"))}prevStep(){this.currentStep>1&&this.goToStep(this.currentStep-1)}goToStep(t){if(t<1||t>this.totalSteps)return;const e=this.toolbar.querySelector("#prev-step-btn"),n=this.toolbar.querySelector("#next-step-btn");e.disabled=1===t,t===this.totalSteps?n.innerHTML='\n        Save & Done\n        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n          <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path>\n          <polyline points="17,21 17,13 7,13 7,21"></polyline>\n          <polyline points="7,3 7,8 15,8"></polyline>\n        </svg>\n      ':n.innerHTML='\n        Next\n        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n          <polyline points="9 18 15 12 9 6"></polyline>\n        </svg>\n      ';const o=this.toolbar.querySelectorAll(".stepper-step"),r=this.toolbar.querySelectorAll(".step-content");o.forEach(t=>t.classList.remove("active")),r.forEach(t=>t.classList.remove("active")),o[t-1].classList.add("active"),r[t-1].classList.add("active"),this.currentStep=t}validateStep(t){this.clearValidationErrors();let e=!1;const n=this.toolbar.querySelector(`.step-content[data-step="${t}"]`);if(1===t)["eventName","category","eventType","eventTrigger","countType"].forEach(t=>{const o=n.querySelector(`[name="${t}"]`);o.value.trim()||(o.classList.add("error"),e=!0)});else if(2===t){const t=n.querySelectorAll('input[name="elementSelector[]"]');let o=!1;for(const e of t)e.value.trim()?(o=!0,e.classList.remove("error")):e.classList.add("error");o||(e=!0)}else if(3===t){const t=n.querySelectorAll('select[name="attributeName[]"]'),e=n.querySelectorAll('input[name="attributeValue[]"]');t.forEach(t=>t.classList.remove("error")),e.forEach(t=>t.classList.remove("error"))}return!e}closeEventForm(){this.currentStep=1,this.collapseForm(),this.toolbar.querySelector("#custom-event-form").reset(),this.clearValidationErrors()}handleFormSubmit(t){t.preventDefault();for(let t=1;t<=this.totalSteps;t++)if(!this.validateStep(t))return void this.goToStep(t);const e=new FormData(this.toolbar.querySelector("#custom-event-form")),n={eventName:e.get("eventName"),category:e.get("category"),eventType:e.get("eventType"),eventTrigger:e.get("eventTrigger"),countType:e.get("countType"),selectors:[]},o=e.getAll("elementSelector[]"),r=e.getAll("patternOperator[]"),i=e.getAll("patternValue[]");for(let t=0;t<o.length;t++)n.selectors.push({elementSelector:o[t],pattern:{operator:r[t],value:i[t]}});const s=e.getAll("attributeName[]"),a=e.getAll("attributeValue[]");n.attributes=[];for(let t=0;t<s.length;t++)s[t]&&a[t].trim()&&n.attributes.push({name:s[t],value:a[t]});this.showLoadingState(),this.callApi(n)}showLoadingState(){const t=this.toolbar.querySelector('#custom-event-form button[type="submit"]');t.disabled=!0,t.textContent="Creating Event..."}hideLoadingState(){const t=this.toolbar.querySelector('#custom-event-form button[type="submit"]');t.disabled=!1,t.textContent="Create Event"}showMessage(t,e="success"){const n=document.createElement("div");n.className=`api-message ${e}`,n.textContent=t,this.toolbar.querySelector("#custom-event-form").appendChild(n),setTimeout(()=>{n.remove()},5e3)}async callApi(t){try{const e=await fetch("/someapimock",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);await e.json(),this.hideLoadingState(),this.showMessage("Event created successfully!","success"),this.toggleEventForm(),this.toolbar.querySelector("#custom-event-form").reset()}catch(t){this.hideLoadingState(),this.showMessage(`Error creating event: ${t.message}`,"error"),console.error("API Error:",t)}}clearValidationErrors(){this.toolbar.querySelector("#custom-event-form").querySelectorAll(".error").forEach(t=>{t.classList.remove("error")})}validateField(t){t.hasAttribute("required")&&!t.value.trim()?t.classList.add("error"):t.classList.remove("error")}getCssSelector(t){let e,n=[];for(;e=t.parentNode;){let o,r=t.tagName;n.unshift(t.id?`#${t.id}`:(o=e.children,1===[].filter.call(o,t=>t.tagName===r).length?r.toLowerCase():`${r.toLowerCase()}:nth-child(${1+[].indexOf.call(o,t)})`)),t=e}return`${n.join(" > ")}`.toLowerCase()}show(){return this.isVisible||(this.toolbar.style.display="block",setTimeout(()=>{this.toolbar.style.transform="translateX(-50%) translateY(0)"},10),this.isVisible=!0),this}hide(){if(this.isVisible){const t="top"===this.options.position?"-100%":"100%";this.toolbar.style.transform=`translateX(-50%) translateY(${t})`,setTimeout(()=>{this.toolbar.style.display="none"},300),this.isVisible=!1}return this.isInspecting&&this.toggleInspector(),this}toggle(){return this.isVisible?this.hide():this.show()}toggleCollapse(){this.toolbar.querySelector(".custom-event-form-container").classList.contains("collapsed")?this.expandForm():this.collapseForm()}collapseForm(){const t=this.toolbar.querySelector(".custom-event-form-container"),e=this.toolbar.querySelector(".inspector-toolbar-collapse");t.classList.add("collapsed"),e.innerHTML='<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6,9 12,15 18,9"></polyline></svg>'}expandForm(){const t=this.toolbar.querySelector(".custom-event-form-container"),e=this.toolbar.querySelector(".inspector-toolbar-collapse");t.classList.remove("collapsed"),e.innerHTML='<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="18,15 12,9 6,15"></polyline></svg>'}destroy(){this.toolbar&&this.toolbar.parentNode&&this.toolbar.parentNode.removeChild(this.toolbar),this.highlighter&&this.highlighter.parentNode&&this.highlighter.parentNode.removeChild(this.highlighter),this.tooltip&&this.tooltip.parentNode&&this.tooltip.parentNode.removeChild(this.tooltip),this.toolbar=null,this.highlighter=null,this.tooltip=null,this.isVisible=!1,this.isInspecting&&this.stopInspecting()}}const f=m;return"undefined"!=typeof window&&(window.InspectorToolbar=m),o.default})());